+set auto-load safe-path /root/.gdb
+set index-cache on
Warning: 'set index-cache on', an alias for the command 'set index-cache enabled', is deprecated.
Use 'set index-cache enabled on'.

+set print pretty
+set follow-fork-mode child
+set print elements 0
+handle SIGPIPE nostop
+handle SIGUSR1 nostop
+handle SIGILL pass nostop noprint
+source /root/.gdb/sqlengine-gdb.py
+source /root/.gdb/std-gdb.gdbinit
+define pvector
+document pvector
+define plist
+document plist
+define plist_member
+document plist_member
+define pmap
+document pmap
+define pmap_member
+document pmap_member
+define pset
+document pset
+define pdequeue
+document pdequeue
+define pstack
+document pstack
+define pqueue
+document pqueue
+define ppqueue
+document ppqueue
+define pbitset
+document pbitset
+define pstring
+document pstring
+define pwstring
+document pwstring
+set print pretty on
+set print object on
+set print static-members on
+set print vtbl on
+set print demangle on
+set demangle-style gnu-v3
+set print sevenbit-strings off
+set follow-fork-mode child
+set detach-on-fork off
Reading symbols from /data/workspace/TDProxyEngine/tdsql/bld/bin/sqlengine...
/root/./my-core-sqlengine-295720-1751739926: No such file or directory.
+qc
Undefined command: "qc".  Try "help".
+bt
No stack.
+bt
No stack.
Quit
+q
+set auto-load safe-path /root/.gdb
+set index-cache on
Warning: 'set index-cache on', an alias for the command 'set index-cache enabled', is deprecated.
Use 'set index-cache enabled on'.

+set print pretty
+set follow-fork-mode child
+set print elements 0
+handle SIGPIPE nostop
+handle SIGUSR1 nostop
+handle SIGILL pass nostop noprint
+source /root/.gdb/sqlengine-gdb.py
+source /root/.gdb/std-gdb.gdbinit
+define pvector
+document pvector
+define plist
+document plist
+define plist_member
+document plist_member
+define pmap
+document pmap
+define pmap_member
+document pmap_member
+define pset
+document pset
+define pdequeue
+document pdequeue
+define pstack
+document pstack
+define pqueue
+document pqueue
+define ppqueue
+document ppqueue
+define pbitset
+document pbitset
+define pstring
+document pstring
+define pwstring
+document pwstring
+set print pretty on
+set print object on
+set print static-members on
+set print vtbl on
+set print demangle on
+set demangle-style gnu-v3
+set print sevenbit-strings off
+set follow-fork-mode child
+set detach-on-fork off
Reading symbols from /data/workspace/TDProxyEngine/tdsql/bld/bin/sqlengine...
[New LWP 295722]
[New LWP 295747]
[New LWP 295720]
[New LWP 295726]
[New LWP 295725]
[New LWP 295724]
[New LWP 295728]
[New LWP 295730]
[New LWP 295727]
[New LWP 295729]
[New LWP 295733]
[New LWP 295732]
[New LWP 295746]
[New LWP 295734]
[New LWP 295735]
[New LWP 295721]
[New LWP 295731]
[New LWP 295745]
[New LWP 295776]
[New LWP 295749]
[New LWP 295778]
[New LWP 295748]
[New LWP 295777]

This GDB supports auto-downloading debuginfo from the following URLs:
  <https://debuginfod.centos.org/>
Debuginfod has been enabled.
To make this setting permanent, add 'set debuginfod enabled on' to .gdbinit.
                                                                                                                                                                                     [Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib64/libthread_db.so.1".
Core was generated by `/data/workspace/TDProxyEngine/tdsql/bld/bin/sqlengine --no-defaults --initializ'.
Program terminated with signal SIGABRT, Aborted.
#0  __pthread_kill (threadid=<optimized out>, signo=6) at ../sysdeps/unix/sysv/linux/pthread_kill.c:56
[Current thread is 1 (Thread 0x7fcf2311e700 (LWP 295722))]
warning: File "/usr/share/gdb/auto-load/usr/lib64/libstdc++.so.6.0.25-gdb.py" auto-loading has been declined by your `auto-load safe-path' set to "/root/.gdb".
To enable execution of this file add
	add-auto-load-safe-path /usr/share/gdb/auto-load/usr/lib64/libstdc++.so.6.0.25-gdb.py
line to your configuration file "/root/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/root/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
warning: Source file is more recent than executable.
+bt
#0  __pthread_kill (threadid=<optimized out>, signo=6) at ../sysdeps/unix/sysv/linux/pthread_kill.c:56
#1  0x0000000008eabf73 in my_write_core (sig=6) at /data/workspace/TDProxyEngine/mysys/stacktrace.cc:409
#2  0x0000000005d39858 in handle_fatal_signal (sig=6) at /data/workspace/TDProxyEngine/sql/signal_handler.cc:194
#3  <signal handler called>
#4  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#5  0x00007fcf23941e65 in __GI_abort () at abort.c:79
#6  0x00007fcf23941d39 in __assert_fail_base (fmt=0x7fcf23aba9c0 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=assertion@entry=0xaf3cb48 "false", file=file@entry=0xb0275d0 "/data/workspace/TDProxyEngine/sql/sql_parse.cc", line=line@entry=4114, function=function@entry=0xb028238 "int mysql_execute_command(THD*, bool)") at assert.c:92
#7  0x00007fcf23966e86 in __GI___assert_fail (assertion=0xaf3cb48 "false", file=0xb0275d0 "/data/workspace/TDProxyEngine/sql/sql_parse.cc", line=4114, function=0xb028238 "int mysql_execute_command(THD*, bool)") at assert.c:101
#8  0x00000000057abe14 in mysql_execute_command (thd=0x1e25a000, first_level=false) at /data/workspace/TDProxyEngine/sql/sql_parse.cc:4114
#9  0x0000000005852327 in (anonymous namespace)::Execute_sql_statement::execute_server_code (this=0x7fcf2311d0f0, thd=0x1e25a000) at /data/workspace/TDProxyEngine/sql/sql_prepare.cc:2585
#10 0x00000000058580c9 in Prepared_statement::execute_server_runnable (this=0x7fcf2311ccc0, server_runnable=0x7fcf2311d0f0) at /data/workspace/TDProxyEngine/sql/sql_prepare.cc:3580
#11 0x000000000585b453 in Ed_connection::execute_direct (this=0x7fcf2311d150, server_runnable=0x7fcf2311d0f0) at /data/workspace/TDProxyEngine/sql/sql_prepare.cc:4198
#12 0x000000000585b202 in Ed_connection::execute_direct (this=0x7fcf2311d150, sql_text=...) at /data/workspace/TDProxyEngine/sql/sql_prepare.cc:4172
#13 0x0000000008990fc5 in dd::execute_query (thd=0x1e25a000, q_buf=...) at /data/workspace/TDProxyEngine/sql/dd/impl/utils.cc:47
#14 0x00000000089bd527 in dd::initialize_dd_properties (thd=0x1e25a000) at /data/workspace/TDProxyEngine/sql/dd/impl/bootstrap/bootstrapper.cc:1209
#15 0x00000000089b7eb3 in dd::bootstrap::initialize_dictionary (thd=0x1e25a000, is_dd_upgrade_57=false, d=0x1d176008) at /data/workspace/TDProxyEngine/sql/dd/impl/bootstrap/bootstrapper.cc:852
#16 0x00000000089b8c25 in dd::bootstrap::initialize (thd=0x1e25a000) at /data/workspace/TDProxyEngine/sql/dd/impl/bootstrap/bootstrapper.cc:928
#17 0x00000000068c77ea in bootstrap::handle_bootstrap (arg=0x7ffd85c9d2f0) at /data/workspace/TDProxyEngine/sql/bootstrap.cc:328
#18 0x0000000009fbb0c4 in pfs_spawn_thread (arg=0x1d9078a0) at /data/workspace/TDProxyEngine/storage/perfschema/pfs.cc:2914
#19 0x00007fcf259ff1ca in start_thread (arg=<optimized out>) at pthread_create.c:479
#20 0x00007fcf239598d3 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95
+bt
#0  __pthread_kill (threadid=<optimized out>, signo=6) at ../sysdeps/unix/sysv/linux/pthread_kill.c:56
#1  0x0000000008eabf73 in my_write_core (sig=6) at /data/workspace/TDProxyEngine/mysys/stacktrace.cc:409
#2  0x0000000005d39858 in handle_fatal_signal (sig=6) at /data/workspace/TDProxyEngine/sql/signal_handler.cc:194
#3  <signal handler called>
#4  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#5  0x00007fcf23941e65 in __GI_abort () at abort.c:79
#6  0x00007fcf23941d39 in __assert_fail_base (fmt=0x7fcf23aba9c0 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=assertion@entry=0xaf3cb48 "false", file=file@entry=0xb0275d0 "/data/workspace/TDProxyEngine/sql/sql_parse.cc", line=line@entry=4114, function=function@entry=0xb028238 "int mysql_execute_command(THD*, bool)") at assert.c:92
#7  0x00007fcf23966e86 in __GI___assert_fail (assertion=0xaf3cb48 "false", file=0xb0275d0 "/data/workspace/TDProxyEngine/sql/sql_parse.cc", line=4114, function=0xb028238 "int mysql_execute_command(THD*, bool)") at assert.c:101
#8  0x00000000057abe14 in mysql_execute_command (thd=0x1e25a000, first_level=false) at /data/workspace/TDProxyEngine/sql/sql_parse.cc:4114
#9  0x0000000005852327 in (anonymous namespace)::Execute_sql_statement::execute_server_code (this=0x7fcf2311d0f0, thd=0x1e25a000) at /data/workspace/TDProxyEngine/sql/sql_prepare.cc:2585
#10 0x00000000058580c9 in Prepared_statement::execute_server_runnable (this=0x7fcf2311ccc0, server_runnable=0x7fcf2311d0f0) at /data/workspace/TDProxyEngine/sql/sql_prepare.cc:3580
#11 0x000000000585b453 in Ed_connection::execute_direct (this=0x7fcf2311d150, server_runnable=0x7fcf2311d0f0) at /data/workspace/TDProxyEngine/sql/sql_prepare.cc:4198
#12 0x000000000585b202 in Ed_connection::execute_direct (this=0x7fcf2311d150, sql_text=...) at /data/workspace/TDProxyEngine/sql/sql_prepare.cc:4172
#13 0x0000000008990fc5 in dd::execute_query (thd=0x1e25a000, q_buf=...) at /data/workspace/TDProxyEngine/sql/dd/impl/utils.cc:47
#14 0x00000000089bd527 in dd::initialize_dd_properties (thd=0x1e25a000) at /data/workspace/TDProxyEngine/sql/dd/impl/bootstrap/bootstrapper.cc:1209
#15 0x00000000089b7eb3 in dd::bootstrap::initialize_dictionary (thd=0x1e25a000, is_dd_upgrade_57=false, d=0x1d176008) at /data/workspace/TDProxyEngine/sql/dd/impl/bootstrap/bootstrapper.cc:852
#16 0x00000000089b8c25 in dd::bootstrap::initialize (thd=0x1e25a000) at /data/workspace/TDProxyEngine/sql/dd/impl/bootstrap/bootstrapper.cc:928
#17 0x00000000068c77ea in bootstrap::handle_bootstrap (arg=0x7ffd85c9d2f0) at /data/workspace/TDProxyEngine/sql/bootstrap.cc:328
#18 0x0000000009fbb0c4 in pfs_spawn_thread (arg=0x1d9078a0) at /data/workspace/TDProxyEngine/storage/perfschema/pfs.cc:2914
#19 0x00007fcf259ff1ca in start_thread (arg=<optimized out>) at pthread_create.c:479
#20 0x00007fcf239598d3 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95
+bt
#0  __pthread_kill (threadid=<optimized out>, signo=6) at ../sysdeps/unix/sysv/linux/pthread_kill.c:56
#1  0x0000000008eabf73 in my_write_core (sig=6) at /data/workspace/TDProxyEngine/mysys/stacktrace.cc:409
#2  0x0000000005d39858 in handle_fatal_signal (sig=6) at /data/workspace/TDProxyEngine/sql/signal_handler.cc:194
#3  <signal handler called>
#4  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#5  0x00007fcf23941e65 in __GI_abort () at abort.c:79
#6  0x00007fcf23941d39 in __assert_fail_base (fmt=0x7fcf23aba9c0 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=assertion@entry=0xaf3cb48 "false", file=file@entry=0xb0275d0 "/data/workspace/TDProxyEngine/sql/sql_parse.cc", line=line@entry=4114, function=function@entry=0xb028238 "int mysql_execute_command(THD*, bool)") at assert.c:92
#7  0x00007fcf23966e86 in __GI___assert_fail (assertion=0xaf3cb48 "false", file=0xb0275d0 "/data/workspace/TDProxyEngine/sql/sql_parse.cc", line=4114, function=0xb028238 "int mysql_execute_command(THD*, bool)") at assert.c:101
#8  0x00000000057abe14 in mysql_execute_command (thd=0x1e25a000, first_level=false) at /data/workspace/TDProxyEngine/sql/sql_parse.cc:4114
#9  0x0000000005852327 in (anonymous namespace)::Execute_sql_statement::execute_server_code (this=0x7fcf2311d0f0, thd=0x1e25a000) at /data/workspace/TDProxyEngine/sql/sql_prepare.cc:2585
#10 0x00000000058580c9 in Prepared_statement::execute_server_runnable (this=0x7fcf2311ccc0, server_runnable=0x7fcf2311d0f0) at /data/workspace/TDProxyEngine/sql/sql_prepare.cc:3580
#11 0x000000000585b453 in Ed_connection::execute_direct (this=0x7fcf2311d150, server_runnable=0x7fcf2311d0f0) at /data/workspace/TDProxyEngine/sql/sql_prepare.cc:4198
#12 0x000000000585b202 in Ed_connection::execute_direct (this=0x7fcf2311d150, sql_text=...) at /data/workspace/TDProxyEngine/sql/sql_prepare.cc:4172
#13 0x0000000008990fc5 in dd::execute_query (thd=0x1e25a000, q_buf=...) at /data/workspace/TDProxyEngine/sql/dd/impl/utils.cc:47
#14 0x00000000089bd527 in dd::initialize_dd_properties (thd=0x1e25a000) at /data/workspace/TDProxyEngine/sql/dd/impl/bootstrap/bootstrapper.cc:1209
#15 0x00000000089b7eb3 in dd::bootstrap::initialize_dictionary (thd=0x1e25a000, is_dd_upgrade_57=false, d=0x1d176008) at /data/workspace/TDProxyEngine/sql/dd/impl/bootstrap/bootstrapper.cc:852
#16 0x00000000089b8c25 in dd::bootstrap::initialize (thd=0x1e25a000) at /data/workspace/TDProxyEngine/sql/dd/impl/bootstrap/bootstrapper.cc:928
#17 0x00000000068c77ea in bootstrap::handle_bootstrap (arg=0x7ffd85c9d2f0) at /data/workspace/TDProxyEngine/sql/bootstrap.cc:328
#18 0x0000000009fbb0c4 in pfs_spawn_thread (arg=0x1d9078a0) at /data/workspace/TDProxyEngine/storage/perfschema/pfs.cc:2914
#19 0x00007fcf259ff1ca in start_thread (arg=<optimized out>) at pthread_create.c:479
#20 0x00007fcf239598d3 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95
+bt
#0  __pthread_kill (threadid=<optimized out>, signo=6) at ../sysdeps/unix/sysv/linux/pthread_kill.c:56
#1  0x0000000008eabf73 in my_write_core (sig=6) at /data/workspace/TDProxyEngine/mysys/stacktrace.cc:409
#2  0x0000000005d39858 in handle_fatal_signal (sig=6) at /data/workspace/TDProxyEngine/sql/signal_handler.cc:194
#3  <signal handler called>
#4  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#5  0x00007fcf23941e65 in __GI_abort () at abort.c:79
#6  0x00007fcf23941d39 in __assert_fail_base (fmt=0x7fcf23aba9c0 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=assertion@entry=0xaf3cb48 "false", file=file@entry=0xb0275d0 "/data/workspace/TDProxyEngine/sql/sql_parse.cc", line=line@entry=4114, function=function@entry=0xb028238 "int mysql_execute_command(THD*, bool)") at assert.c:92
#7  0x00007fcf23966e86 in __GI___assert_fail (assertion=0xaf3cb48 "false", file=0xb0275d0 "/data/workspace/TDProxyEngine/sql/sql_parse.cc", line=4114, function=0xb028238 "int mysql_execute_command(THD*, bool)") at assert.c:101
#8  0x00000000057abe14 in mysql_execute_command (thd=0x1e25a000, first_level=false) at /data/workspace/TDProxyEngine/sql/sql_parse.cc:4114
#9  0x0000000005852327 in (anonymous namespace)::Execute_sql_statement::execute_server_code (this=0x7fcf2311d0f0, thd=0x1e25a000) at /data/workspace/TDProxyEngine/sql/sql_prepare.cc:2585
#10 0x00000000058580c9 in Prepared_statement::execute_server_runnable (this=0x7fcf2311ccc0, server_runnable=0x7fcf2311d0f0) at /data/workspace/TDProxyEngine/sql/sql_prepare.cc:3580
#11 0x000000000585b453 in Ed_connection::execute_direct (this=0x7fcf2311d150, server_runnable=0x7fcf2311d0f0) at /data/workspace/TDProxyEngine/sql/sql_prepare.cc:4198
#12 0x000000000585b202 in Ed_connection::execute_direct (this=0x7fcf2311d150, sql_text=...) at /data/workspace/TDProxyEngine/sql/sql_prepare.cc:4172
#13 0x0000000008990fc5 in dd::execute_query (thd=0x1e25a000, q_buf=...) at /data/workspace/TDProxyEngine/sql/dd/impl/utils.cc:47
#14 0x00000000089bd527 in dd::initialize_dd_properties (thd=0x1e25a000) at /data/workspace/TDProxyEngine/sql/dd/impl/bootstrap/bootstrapper.cc:1209
#15 0x00000000089b7eb3 in dd::bootstrap::initialize_dictionary (thd=0x1e25a000, is_dd_upgrade_57=false, d=0x1d176008) at /data/workspace/TDProxyEngine/sql/dd/impl/bootstrap/bootstrapper.cc:852
#16 0x00000000089b8c25 in dd::bootstrap::initialize (thd=0x1e25a000) at /data/workspace/TDProxyEngine/sql/dd/impl/bootstrap/bootstrapper.cc:928
#17 0x00000000068c77ea in bootstrap::handle_bootstrap (arg=0x7ffd85c9d2f0) at /data/workspace/TDProxyEngine/sql/bootstrap.cc:328
#18 0x0000000009fbb0c4 in pfs_spawn_thread (arg=0x1d9078a0) at /data/workspace/TDProxyEngine/storage/perfschema/pfs.cc:2914
#19 0x00007fcf259ff1ca in start_thread (arg=<optimized out>) at pthread_create.c:479
#20 0x00007fcf239598d3 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95
+bt
#0  __pthread_kill (threadid=<optimized out>, signo=6) at ../sysdeps/unix/sysv/linux/pthread_kill.c:56
#1  0x0000000008eabf73 in my_write_core (sig=6) at /data/workspace/TDProxyEngine/mysys/stacktrace.cc:409
#2  0x0000000005d39858 in handle_fatal_signal (sig=6) at /data/workspace/TDProxyEngine/sql/signal_handler.cc:194
#3  <signal handler called>
#4  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#5  0x00007fcf23941e65 in __GI_abort () at abort.c:79
#6  0x00007fcf23941d39 in __assert_fail_base (fmt=0x7fcf23aba9c0 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=assertion@entry=0xaf3cb48 "false", file=file@entry=0xb0275d0 "/data/workspace/TDProxyEngine/sql/sql_parse.cc", line=line@entry=4114, function=function@entry=0xb028238 "int mysql_execute_command(THD*, bool)") at assert.c:92
#7  0x00007fcf23966e86 in __GI___assert_fail (assertion=0xaf3cb48 "false", file=0xb0275d0 "/data/workspace/TDProxyEngine/sql/sql_parse.cc", line=4114, function=0xb028238 "int mysql_execute_command(THD*, bool)") at assert.c:101
#8  0x00000000057abe14 in mysql_execute_command (thd=0x1e25a000, first_level=false) at /data/workspace/TDProxyEngine/sql/sql_parse.cc:4114
#9  0x0000000005852327 in (anonymous namespace)::Execute_sql_statement::execute_server_code (this=0x7fcf2311d0f0, thd=0x1e25a000) at /data/workspace/TDProxyEngine/sql/sql_prepare.cc:2585
#10 0x00000000058580c9 in Prepared_statement::execute_server_runnable (this=0x7fcf2311ccc0, server_runnable=0x7fcf2311d0f0) at /data/workspace/TDProxyEngine/sql/sql_prepare.cc:3580
#11 0x000000000585b453 in Ed_connection::execute_direct (this=0x7fcf2311d150, server_runnable=0x7fcf2311d0f0) at /data/workspace/TDProxyEngine/sql/sql_prepare.cc:4198
#12 0x000000000585b202 in Ed_connection::execute_direct (this=0x7fcf2311d150, sql_text=...) at /data/workspace/TDProxyEngine/sql/sql_prepare.cc:4172
#13 0x0000000008990fc5 in dd::execute_query (thd=0x1e25a000, q_buf=...) at /data/workspace/TDProxyEngine/sql/dd/impl/utils.cc:47
#14 0x00000000089bd527 in dd::initialize_dd_properties (thd=0x1e25a000) at /data/workspace/TDProxyEngine/sql/dd/impl/bootstrap/bootstrapper.cc:1209
#15 0x00000000089b7eb3 in dd::bootstrap::initialize_dictionary (thd=0x1e25a000, is_dd_upgrade_57=false, d=0x1d176008) at /data/workspace/TDProxyEngine/sql/dd/impl/bootstrap/bootstrapper.cc:852
#16 0x00000000089b8c25 in dd::bootstrap::initialize (thd=0x1e25a000) at /data/workspace/TDProxyEngine/sql/dd/impl/bootstrap/bootstrapper.cc:928
#17 0x00000000068c77ea in bootstrap::handle_bootstrap (arg=0x7ffd85c9d2f0) at /data/workspace/TDProxyEngine/sql/bootstrap.cc:328
#18 0x0000000009fbb0c4 in pfs_spawn_thread (arg=0x1d9078a0) at /data/workspace/TDProxyEngine/storage/perfschema/pfs.cc:2914
#19 0x00007fcf259ff1ca in start_thread (arg=<optimized out>) at pthread_create.c:479
#20 0x00007fcf239598d3 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95
+f 13
#13 0x0000000008990fc5 in dd::execute_query (thd=0x1e25a000, q_buf=...) at /data/workspace/TDProxyEngine/sql/dd/impl/utils.cc:47
+p *thd
$1 = (THD) {
  <MDL_context_owner> = {
    _vptr.MDL_context_owner = 0xe687508 <vtable for THD+16>
  }, 
  <Query_arena> = {
    _vptr.Query_arena = 0xe687578 <vtable for THD+128>,
    m_item_list = 0x0,
    mem_root = 0x7fcf2311cf68,
    is_repreparing = false,
    state = Query_arena::STMT_REGULAR_EXECUTION
  }, 
  <Open_tables_state> = {
    m_reprepare_observers = empty Prealloced_array<Reprepare_observer*, 4>,
    open_tables = 0x0,
    temporary_tables = 0x0,
    lock = 0x0,
    extra_lock = 0x0,
    locked_tables_mode = LTM_NONE,
    state_flags = 0
  }, 
  members of THD:
  mdl_context = {
    m_wait = {
      m_LOCK_wait_status = Python Exception <class 'gdb.error'>: There is no member named __data.
,
      m_COND_wait_status = {
        m_cond = {
          m = 0x0,
          seq = 0x1d928fc0
        },
        m_psi = 0x0
      },
      m_wait_status = MDL_wait::WS_EMPTY
    },
    m_ticket_store = {
      m_durations = {{
          m_ticket_list = {
            <I_P_List_null_counter> = {<No data fields>}, 
            <I_P_List_no_push_back<MDL_ticket>> = {<No data fields>}, 
            members of I_P_List<MDL_ticket, I_P_List_adapter<MDL_ticket, &MDL_ticket::next_in_context, &MDL_ticket::prev_in_context>, I_P_List_null_counter, I_P_List_no_push_back<MDL_ticket> >:
            m_first = 0x0
          },
          m_mat_front = 0x0
        }, {
          m_ticket_list = {
            <I_P_List_null_counter> = {<No data fields>}, 
            <I_P_List_no_push_back<MDL_ticket>> = {<No data fields>}, 
            members of I_P_List<MDL_ticket, I_P_List_adapter<MDL_ticket, &MDL_ticket::next_in_context, &MDL_ticket::prev_in_context>, I_P_List_null_counter, I_P_List_no_push_back<MDL_ticket> >:
            m_first = 0x0
          },
          m_mat_front = 0x0
        }, {
          m_ticket_list = {
            <I_P_List_null_counter> = {<No data fields>}, 
            <I_P_List_no_push_back<MDL_ticket>> = {<No data fields>}, 
            members of I_P_List<MDL_ticket, I_P_List_adapter<MDL_ticket, &MDL_ticket::next_in_context, &MDL_ticket::prev_in_context>, I_P_List_null_counter, I_P_List_no_push_back<MDL_ticket> >:
            m_first = 0x0
          },
          m_mat_front = 0x0
        }},
      THRESHOLD = 256,
      INITIAL_BUCKET_COUNT = 512,
      m_count = 0,
      m_map = {
        _M_t = {
          <std::__uniq_ptr_impl<std::unordered_multimap<MDL_key const*, MDL_ticket_store::MDL_ticket_handle, MDL_ticket_store::Hash, MDL_ticket_store::Key_equal, std::allocator<std::pair<MDL_key const* const, MDL_ticket_store::MDL_ticket_handle> > >, std::default_delete<std::unordered_multimap<MDL_key const*, MDL_ticket_store::MDL_ticket_handle, MDL_ticket_store::Hash, MDL_ticket_store::Key_equal, std::allocator<std::pair<MDL_key const* const, MDL_ticket_store::MDL_ticket_handle> > > > >> = {
            _M_t = {
              <std::_Tuple_impl<0, std::unordered_multimap<MDL_key const*, MDL_ticket_store::MDL_ticket_handle, MDL_ticket_store::Hash, MDL_ticket_store::Key_equal, std::allocator<std::pair<MDL_key const* const, MDL_ticket_store::MDL_ticket_handle> > >*, std::default_delete<std::unordered_multimap<MDL_key const*, MDL_ticket_store::MDL_ticket_handle, MDL_ticket_store::Hash, MDL_ticket_store::Key_equal, std::allocator<std::pair<MDL_key const* const, MDL_ticket_store::MDL_ticket_handle> > > > >> = {
                <std::_Tuple_impl<1, std::default_delete<std::unordered_multimap<MDL_key const*, MDL_ticket_store::MDL_ticket_handle, MDL_ticket_store::Hash, MDL_ticket_store::Key_equal, std::allocator<std::pair<MDL_key const* const, MDL_ticket_store::MDL_ticket_handle> > > > >> = {
                  <std::_Head_base<1, std::default_delete<std::unordered_multimap<MDL_key const*, MDL_ticket_store::MDL_ticket_handle, MDL_ticket_store::Hash, MDL_ticket_store::Key_equal, std::allocator<std::pair<MDL_key const* const, MDL_ticket_store::MDL_ticket_handle> > > >, true>> = {
                    <std::default_delete<std::unordered_multimap<MDL_key const*, MDL_ticket_store::MDL_ticket_handle, MDL_ticket_store::Hash, MDL_ticket_store::Key_equal, std::allocator<std::pair<MDL_key const* const, MDL_ticket_store::MDL_ticket_handle> > > >> = {<No data fields>}, <No data fields>}, <No data fields>}, 
                <std::_Head_base<0, std::unordered_multimap<MDL_key const*, MDL_ticket_store::MDL_ticket_handle, MDL_ticket_store::Hash, MDL_ticket_store::Key_equal, std::allocator<std::pair<MDL_key const* const, MDL_ticket_store::MDL_ticket_handle> > >*, false>> = {
                  _M_head_impl = 0x0
                }, <No data fields>}, <No data fields>}
          }, <No data fields>}
      }
    },
    m_owner = 0x1e25a000,
    m_group_leader = 0x0,
    m_needs_thr_lock_abort = false,
    m_force_dml_deadlock_weight = false,
    m_LOCK_waiting_for = {
      m_prlock = {
        lock = {
          butex = 0x1d929340,
          csite = {
            duration_ns = 0,
            sampling_range = 0
          }
        },
        no_active_readers = {
          m = 0x0,
          seq = 0x1d929380
        },
        active_readers = 0,
        writers_waiting_readers = 0,
        active_writer = false,
        writer_thread = 0
      },
      m_psi = 0x0
    },
    m_waiting_for = 0x0,
    m_pins = 0x2257e080,
    m_rand_state = 4294967295
  },
  mark_used_columns = MARK_COLUMNS_READ,
  want_privilege = 0,
  main_lex = {
    _M_t = {
      <std::__uniq_ptr_impl<LEX, std::default_delete<LEX> >> = {
        _M_t = {
          <std::_Tuple_impl<0, LEX*, std::default_delete<LEX> >> = {
            <std::_Tuple_impl<1, std::default_delete<LEX> >> = {
              <std::_Head_base<1, std::default_delete<LEX>, true>> = {
                <std::default_delete<LEX>> = {<No data fields>}, <No data fields>}, <No data fields>}, 
            <std::_Head_base<0, LEX*, false>> = {
              _M_head_impl = 0x1d8b6400
            }, <No data fields>}, <No data fields>}
      }, <No data fields>}
  },
  lex = 0x1f4dc028,
  ora_type_pos_list = {
    <std::__cxx11::_List_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >> = {
      _M_impl = {
        <std::allocator<std::_List_node<std::pair<int, int> > >> = {
          <__gnu_cxx::new_allocator<std::_List_node<std::pair<int, int> > >> = {<No data fields>}, <No data fields>}, 
        members of std::__cxx11::_List_base<std::pair<int, int>, std::allocator<std::pair<int, int> > >::_List_impl:
        _M_node = {
          <std::__detail::_List_node_base> = {
            _M_next = 0x1e25a1a8,
            _M_prev = 0x1e25a1a8
          }, 
          members of std::__detail::_List_node_header:
          _M_size = 0
        }
      }
    }, <No data fields>},
  m_dd_client = {
    _M_t = {
      <std::__uniq_ptr_impl<dd::cache::Dictionary_client, std::default_delete<dd::cache::Dictionary_client> >> = {
        _M_t = {
          <std::_Tuple_impl<0, dd::cache::Dictionary_client*, std::default_delete<dd::cache::Dictionary_client> >> = {
            <std::_Tuple_impl<1, std::default_delete<dd::cache::Dictionary_client> >> = {
              <std::_Head_base<1, std::default_delete<dd::cache::Dictionary_client>, true>> = {
                <std::default_delete<dd::cache::Dictionary_client>> = {<No data fields>}, <No data fields>}, <No data fields>}, 
            <std::_Head_base<0, dd::cache::Dictionary_client*, false>> = {
              _M_head_impl = 0x1d8fec00
            }, <No data fields>}, <No data fields>}
      }, <No data fields>}
  },
  m_query_string = {
    str = 0x1f4dcbb8 "CREATE TABLE dd_properties(\n  properties MEDIUMBLOB\n) ENGINE=INNODB DEFAULT CHARSET=utf8 COLLATE=utf8_bin ROW_FORMAT=DYNAMIC STATS_PERSISTENT=0 TABLESPACE=mysql",
    length = 160
  },
  m_normalized_query = {
    m_ptr = 0x0,
    m_length = 0,
    m_charset = 0x157bc6a0 <my_charset_bin>,
    m_alloced_length = 0,
    m_is_alloced = false
  },
  m_safe_to_display = {
    _M_base = {
      static _S_alignment = 1,
      _M_i = true
    },
    static is_always_lock_free = true
  },
  m_catalog = {
    str = 0xaf4e370 "std",
    length = 3
  },
  m_db = {
    str = 0x224acb00 "mysql",
    length = 5
  },
  m_resource_group_ctx = {
    m_cur_resource_group = 0x0,
    m_switch_resource_group_str = "\000\000\000\000\000\000\000\000innodb-log-checkpoint-every\000\000\000\000\000plugin-innodb-log-checkpo",
    m_warn = 0
  },
  m_rewritten_query = {
    m_ptr = 0x0,
    m_length = 0,
    m_charset = 0x157bc6a0 <my_charset_bin>,
    m_alloced_length = 0,
    m_is_alloced = false
  },
  m_group_leader = 0x0,
  rli_fake = 0x0,
  rli_slave = 0x0,
  tx_commit_pending = false,
  m_select_lock_n_sec = 0,
  static DEFAULT_WHERE = 0xaf55cbb "field list",
  m_net_server_extension = {
    m_before_header = 0x0,
    m_after_header = 0x0,
    m_user_data = 0x0,
    compression = {
      compress_algorithm = '\000' <repeats 31 times>,
      compress_level = 0,
      compression_optional = false
    },
    compress_ctx = {
      algorithm = 0,
      u = {
        zlib_ctx = {
          compression_level = 0
        },
        zstd_ctx = {
          cctx = 0x0,
          dctx = 0x0,
          compression_level = 0
        }
      }
    },
    max_interval_packet = 0,
    net_buffer_shrink_time = 0
  },
  scheduler = 0x0,
  user_vars = {
    <std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::unique_ptr<user_var_entry, void (*)(user_var_entry*)>, Collation_hasher, Collation_key_equal, Malloc_allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<user_var_entry, void (*)(user_var_entry*)> > > >> = {
      _M_h = {
        <std::__detail::_Hashtable_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<user_var_entry, void (*)(user_var_entry*)> >, std::__detail::_Select1st, Collation_key_equal, Collation_hasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<true, false, true> >> = {
          <std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<user_var_entry, void (*)(user_var_entry*)> >, std::__detail::_Select1st, Collation_hasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>> = {
            <std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Select1st, true>> = {
              <std::__detail::_Select1st> = {<No data fields>}, <No data fields>}, 
            <std::__detail::_Hashtable_ebo_helper<1, Collation_hasher, false>> = {
              _M_tp = {
                cs = 0x1593c340 <my_charset_utf8_general_ci>,
                hash_sort = 0xa71620c <my_hash_sort_utf8(CHARSET_INFO const*, uchar const*, size_t, uint64*, uint64*)>
              }
            }, 
            <std::__detail::_Hashtable_ebo_helper<2, std::__detail::_Mod_range_hashing, true>> = {
              <std::__detail::_Mod_range_hashing> = {<No data fields>}, <No data fields>}, <No data fields>}, 
          <std::__detail::_Hashtable_ebo_helper<0, Collation_key_equal, false>> = {
            _M_tp = {
              cs = 0x1593c340 <my_charset_utf8_general_ci>,
              strnncollsp = 0xa716b4b <my_strnncollsp_utf8(CHARSET_INFO const*, uchar const*, size_t, uchar const*, size_t)>
            }
          }, <No data fields>}, 
        <std::__detail::_Map_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<user_var_entry, void (*)(user_var_entry*)> >, Malloc_allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<user_var_entry, void (*)(user_var_entry*)> > >, std::__detail::_Select1st, Collation_key_equal, Collation_hasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>> = {<No data fields>}, 
        <std::__detail::_Insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<user_var_entry, void (*)(user_var_entry*)> >, Malloc_allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<user_var_entry, void (*)(user_var_entry*)> > >, std::__detail::_Select1st, Collation_key_equal, Collation_hasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, false>> = {
          <std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<user_var_entry, void (*)(user_var_entry*)> >, Malloc_allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<user_var_entry, void (*)(user_var_entry*)> > >, std::__detail::_Select1st, Collation_key_equal, Collation_hasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >> = {<No data fields>}, <No data fields>}, 
        <std::__detail::_Rehash_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<user_var_entry, void (*)(user_var_entry*)> >, Malloc_allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<user_var_entry, void (*)(user_var_entry*)> > >, std::__detail::_Select1st, Collation_key_equal, Collation_hasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, std::integral_constant<bool, true> >> = {<No data fields>}, 
        <std::__detail::_Equality<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<user_var_entry, void (*)(user_var_entry*)> >, Malloc_allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<user_var_entry, void (*)(user_var_entry*)> > >, std::__detail::_Select1st, Collation_key_equal, Collation_hasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>> = {<No data fields>}, 
        <std::__detail::_Hashtable_alloc<Malloc_allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<user_var_entry, void (*)(user_var_entry*)> >, true> > >> = {
          <std::__detail::_Hashtable_ebo_helper<0, Malloc_allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<user_var_entry, void (*)(user_var_entry*)> >, true> >, false>> = {
            _M_tp = {
              m_key = 0
            }
          }, <No data fields>}, 
        members of std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<user_var_entry, void (*)(user_var_entry*)> >, Malloc_allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<user_var_entry, void (*)(user_var_entry*)> > >, std::__detail::_Select1st, Collation_key_equal, Collation_hasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >:
        _M_buckets = 0x1d9eef20,
        _M_bucket_count = 11,
        _M_before_begin = {
          _M_nxt = 0x0
        },
        _M_element_count = 0,
        _M_rehash_policy = {
          static _S_growth_factor = 2,
          _M_max_load_factor = 1,
          _M_next_resize = 11
        },
        _M_single_bucket = 0x0
      }
    }, <No data fields>},
  rand = {
    seed1 = 623515669,
    seed2 = 117732486,
    max_value = 1073741823,
    max_value_dbl = 1073741823
  },
  slog_rand = {
    seed1 = 623515701,
    seed2 = 117732486,
    max_value = 1073741823,
    max_value_dbl = 1073741823
  },
  variables = {
    dynamic_variables_version = 0,
    dynamic_variables_ptr = 0x0,
    dynamic_variables_head = 320,
    dynamic_variables_size = 0,
    dynamic_variables_allocs = 0x0,
    max_heap_table_size = 16777216,
    tmp_table_size = 16777216,
    long_query_time = 10000000,
    end_markers_in_json = false,
    windowing_use_high_precision = true,
    optimizer_switch = 45613055,
    optimizer_trace = 0,
    optimizer_trace_features = 15,
    optimizer_trace_offset = -1,
    optimizer_trace_limit = 1,
    optimizer_trace_max_mem_size = 1048576,
    sql_mode = 1168113696,
    option_bits = 2148272640,
    select_limit = 18446744073709551615,
    max_join_size = 18446744073709551615,
    auto_increment_increment = 1,
    auto_increment_offset = 1,
    bulk_insert_buff_size = 8388608,
    eq_range_index_dive_limit = 200,
    cte_max_recursion_depth = 1000,
    histogram_generation_max_mem_size = 20000000,
    join_buff_size = 262144,
    lock_wait_timeout = 31536000,
    max_allowed_packet = 67108864,
    max_error_count = 1024,
    max_length_for_sort_data = 4096,
    max_points_in_geometry = 65536,
    max_sort_length = 1024,
    max_insert_delayed_threads = 20,
    min_examined_row_limit = 0,
    net_buffer_length = 16384,
    net_interactive_timeout = 28800,
    net_read_timeout = 30,
    net_retry_count = 10,
    net_wait_timeout = 28800,
    net_write_timeout = 60,
    optimizer_prune_level = 1,
    optimizer_search_depth = 62,
    parser_max_mem_size = 18446744073709551615,
    range_optimizer_max_mem_size = 8388608,
    preload_buff_size = 32768,
    profiling_history_size = 15,
    read_buff_size = 131072,
    read_rnd_buff_size = 262144,
    div_precincrement = 4,
    sortbuff_size = 262144,
    max_sp_recursion_depth = 0,
    default_week_format = 0,
    max_seeks_for_key = 18446744073709551615,
    range_alloc_block_size = 4096,
    query_alloc_block_size = 8192,
    query_prealloc_size = 8192,
    trans_alloc_block_size = 8192,
    trans_prealloc_size = 4096,
    group_concat_max_len = 1024,
    binlog_format = 2,
    rbr_exec_mode_options = 0,
    binlog_direct_non_trans_update = false,
    binlog_row_image = 2,
    binlog_trx_compression = false,
    binlog_trx_compression_type = 0,
    binlog_trx_compression_level_zstd = 3,
    binlog_row_value_options = 0,
    sql_log_bin = true,
    transaction_write_set_extraction = 2,
    completion_type = 0,
    transaction_isolation = 2,
    updatable_views_with_limit = 1,
    max_user_connections = 0,
    my_aes_mode = 0,
    ssl_fips_mode = 0,
    resultset_metadata = 1,
    pseudo_thread_id = 1,
    transaction_read_only = false,
    low_priority_updates = false,
    new_mode = false,
    keep_files_on_create = false,
    old_alter_table = false,
    big_tables = false,
    table_plugin = 0x1e2457f0,
    temp_table_plugin = 0x1e245820,
    character_set_filesystem = 0x157bc6a0 <my_charset_bin>,
    character_set_client = 0x159136a0 <my_charset_utf8mb4_0900_ai_ci>,
    character_set_results = 0x159136a0 <my_charset_utf8mb4_0900_ai_ci>,
    collation_server = 0x159136a0 <my_charset_utf8mb4_0900_ai_ci>,
    collation_database = 0x159136a0 <my_charset_utf8mb4_0900_ai_ci>,
    collation_connection = 0x159136a0 <my_charset_utf8mb4_0900_ai_ci>,
    lc_messages = 0x1630d260 <my_locale_en_US>,
    lc_time_names = 0x1630d260 <my_locale_en_US>,
    time_zone = 0xf9c6da8 <tz_SYSTEM>,
    explicit_defaults_for_timestamp = true,
    sysdate_is_now = false,
    binlog_rows_query_log_events = false,
    binlog_ddl_skip_rewrite = false,
    query_exec_time = 0,
    query_exec_time_double = 0,
    log_slow_rate_limit = 1,
    log_slow_filter = 0,
    log_slow_verbosity = 0,
    log_query_errors = {
      static MAX_CODES_NUM = 64 '@',
      static MAX_TEXT_LENGTH = 640,
      static LOG_ALL = {
        m_ptr = 0xbf25054 "ALL",
        m_length = 3,
        m_charset = 0x0,
        m_alloced_length = 0,
        m_is_alloced = false
      },
      is_all_set = false,
      codes = {0 <repeats 64 times>}
    },
    innodb_io_reads = 0,
    innodb_io_read = 0,
    innodb_io_reads_wait_timer = 0,
    innodb_lock_que_wait_timer = 0,
    innodb_innodb_que_wait_timer = 0,
    innodb_page_access = 0,
    long_query_time_double = 10,
    pseudo_replica_mode = false,
    gtid_next = {
      type = AUTOMATIC_GTID,
      gtid = {
        sidno = 0,
        gno = 0,
        static MAX_TEXT_LENGTH = 56
      },
      static MAX_TEXT_LENGTH = 56
    },
    gtid_next_list = {
      gtid_set = 0x0,
      is_non_null = false
    },
    session_track_gtids = 0,
    max_execution_time = 0,
    track_sysvars_ptr = 0x1d9eec20 "time_zone,autocommit,character_set_client,character_set_results,character_set_connection",
    session_track_schema = true,
    session_track_state_change = false,
    expand_fast_index_creation = false,
    threadpool_high_prio_tickets = 4294967295,
    threadpool_high_prio_mode = 0,
    session_track_transaction_info = 0,
    information_schema_stats_expiry = 86400,
    show_create_table_verbosity = false,
    show_old_temporals = false,
    ft_query_extra_word_chars = false,
    original_commit_timestamp = 36028797018963968,
    internal_tmp_mem_storage_engine = 1,
    default_collation_for_utf8mb4 = 0x159136a0 <my_charset_utf8mb4_0900_ai_ci>,
    use_secondary_engine = 1,
    secondary_engine_cost_threshold = 100000,
    group_replication_consistency = 0,
    sql_require_primary_key = false,
    sql_generate_invisible_primary_key = true,
    show_gipk_in_create_table_and_information_schema = true,
    original_server_version = 999999,
    immediate_server_version = 999999,
    print_identified_with_as_hex = false,
    default_table_encryption = 0,
    show_create_table_skip_secondary_engine = false,
    generated_random_password_length = 20,
    require_row_format = false,
    select_into_buffer_size = 131072,
    select_into_disk_sync = false,
    select_into_disk_sync_delay = 0,
    terminology_use_previous = 0,
    opt_tdsql_ignore_single_select_index = true,
    opt_tdsql_ignore_single_update_index = true,
    opt_tdsql_legacy_hint = true,
    opt_tdsql_legacy_hint_display_router = false,
    opt_tdsql_fqs = true,
    opt_tdsql_fqs_switch = 2046,
    opt_tran_engine_to_tdsql = true,
    opt_tdsql_ddl_create_table_as_switch = false,
    opt_tdsql_ddl_exec_set_vars = 0x1e245850 "",
    opt_tdsql_ddl_trigger_osc_config = 0x1e245790 "",
    opt_tdsql_ddl_log_osc_config = 0x1e245760 "",
    opt_tdsql_ddl_lock_osc_config = 0x1e245730 "",
    opt_tdsql_binlog_dump_sticky_backend = 0x1e245700 "",
    opt_tdsql_ddl_legacy_compatibility = 1,
    opt_tdsql_ddl_enable_noop_features = false,
    opt_tdsql_ddl_auto_distribution_mode = false,
    opt_tdsql_ddl_enable_task_framework = false,
    opt_tdsql_ddl_acquire_resource_lock_serially = true,
    opt_tdsql_ddl_forbid_float_as_unique_key = true,
    opt_tdsql_alter_table_check_switch = 31,
    opt_tdsql_ddl_switch = 3,
    opt_partition_selection_multi_sets = false,
    opt_tdsql_partition_selection = false,
    opt_tdsql_subst_prepared_statement_params = false,
    opt_tdsql_ddl_nonblock_switch = true,
    opt_tdsql_ddl_nonblock_retry_times = 12,
    opt_tdsql_ddl_nonblock_retry_interval_s = 5,
    opt_tdsql_ddl_nonblock_lock_wait_timeout_s = 1,
    opt_tdsql_local_lock = false,
    opt_tdsql_dml_bulk_size = 5242880,
    opt_tdsql_bulk_dml = true,
    opt_tdsql_insert_ignore_abort_on_invalid_partition = false,
    opt_tdsql_prepared_statement_fast_path = false,
    opt_tdsql_enable_parallel_connection = false,
    tdsql_range_estimation_by_histogram = false,
    opt_tdsql_forbid_json_opaque_value = true,
    tdsql_show_virtual_index = false,
    tdsql_virtual_index_rec_per_key = 10,
    tdsql_allow_unique_index_histogram = false,
    tdsql_enable_replicate_table_write = false,
    show_dummy_shardkey_in_create_table = true,
    tdsql_allow_access_internal_table = false,
    tdsql_enable_parallel_query = true,
    parallel_query_switch = 189,
    opt_tdsql_compat_oracle_mode = false,
    tdsql_oracle_upper_case_name = false,
    tdsql_oracle_aggr_func_return_decimal = false,
    tdsql_ddl_name_restrict = false,
    opt_tdsql_disable_const_tables_for_pq = false,
    tdsql_query_offload_libra_mode = 0,
    tdsql_secondary_engine_offload_failed_warning = false,
    tdsql_secondary_execute_failed_failback_primary_engine = false,
    tdsql_secondary_engine_support_multi_stmt_transaction_mode = false,
    statement_outline_enable_apply = true,
    statement_outline_apply_verbose = false,
    opt_tdsql_sequence_usage_check = true,
    tdsql_rw_split = 1,
    tdsql_rw_latency_threshold = 10,
    tdsql_rw_slave_keep_time = 0,
    tdsql_close_unused_slave_connection = true,
    tdsql_parse_double_quote_as_back_quote = true,
    tdsql_enable_direct_semi_anti_join = false,
    tdsql_check_deparser_mode = false,
    tdsql_opt_prefer_firstmatch_sj = true,
    tdsql_subquery_cache_enabled = false,
    tdsql_subquery_cache_cost_threshold = 4000,
    tdsql_subquery_cache_check_frequency = 200,
    opt_tdsql_enable_user_hint_pushdown = true,
    opt_tdsql_send_found_rows = false,
    opt_tdsql_connection_id = 4294967296
  },
  status_var = {
    created_tmp_disk_tables = 0,
    created_tmp_tables = 0,
    ha_commit_count = 0,
    ha_delete_count = 0,
    ha_read_first_count = 0,
    ha_read_last_count = 0,
    ha_read_key_count = 0,
    ha_read_next_count = 0,
    ha_read_prev_count = 0,
    ha_read_rnd_count = 0,
    ha_read_rnd_next_count = 0,
    ha_multi_range_read_init_count = 0,
    ha_rollback_count = 0,
    ha_update_count = 0,
    ha_write_count = 0,
    ha_prepare_count = 0,
    ha_discover_count = 0,
    ha_savepoint_count = 0,
    ha_savepoint_rollback_count = 0,
    ha_external_lock_count = 0,
    opened_tables = 0,
    opened_shares = 0,
    table_open_cache_hits = 0,
    table_open_cache_misses = 0,
    table_open_cache_overflows = 0,
    select_full_join_count = 0,
    select_full_range_join_count = 0,
    select_range_count = 0,
    select_range_check_count = 0,
    select_scan_count = 0,
    long_query_count = 0,
    filesort_merge_passes = 0,
    filesort_range_count = 0,
    filesort_rows = 0,
    filesort_scan_count = 0,
    com_stmt_prepare = 0,
    com_stmt_reprepare = 0,
    com_stmt_execute = 0,
    com_stmt_send_long_data = 0,
    com_stmt_fetch = 0,
    com_stmt_reset = 0,
    com_stmt_close = 0,
    bytes_received = 0,
    bytes_sent = 0,
    net_buffer_length = 0,
    max_execution_time_exceeded = 0,
    max_execution_time_set = 0,
    max_execution_time_set_failed = 0,
    questions = 0,
    pq_workers_created = 0,
    pq_rows_exchanged = 0,
    pq_fetch_rows = 0,
    pq_read_would_blocks = 0,
    remote_queries_executed = 0,
    tdsql_hint_count = 0,
    fqs_query_count = 0,
    fqs_rows_exchanged = 0,
    fqs_read_would_blocks = 0,
    fqs_rows_read_counts = 0,
    fqs_prepared_statement_fast_path_count = 0,
    proxy_hint_query_count = 0,
    digest_truncated_count = 0,
    success_queries = 0,
    error_queries = 0,
    transaction = 0,
    trx_access_zero_dn = 0,
    trx_access_one_dn = 0,
    trx_access_one_dn_read = 0,
    trx_access_one_dn_write = 0,
    trx_access_one_dn_write_commit = 0,
    trx_access_one_dn_write_rollback = 0,
    trx_access_multi_dn = 0,
    trx_access_multi_dn_read = 0,
    trx_access_multi_dn_write = 0,
    trx_access_multi_dn_write_2pc = 0,
    trx_access_multi_dn_write_2pc_success = 0,
    trx_access_multi_dn_write_2pc_error = 0,
    trx_access_multi_dn_write_2pc_unknown = 0,
    trx_access_multi_dn_write_one_phase_commit = 0,
    trx_access_multi_dn_write_rollback = 0,
    secondary_engine_execution_count = 0,
    com_other = 0,
    com_stat = {0, 1, 0 <repeats 33 times>, 1, 1, 0 <repeats 153 times>},
    last_query_cost = 0,
    last_query_partial_plans = 0,
    fragmentation_stats = {
      scan_pages_contiguous = 0,
      scan_pages_disjointed = 0,
      scan_pages_total_seek_distance = 0,
      scan_data_size = 0,
      scan_deleted_recs_size = 0
    }
  },
  initial_status_var = 0x0,
  status_var_aggregated = false,
  m_connection_attributes = {
    <std::_Vector_base<char, std::allocator<char> >> = {
      _M_impl = {
        <std::allocator<char>> = {
          <__gnu_cxx::new_allocator<char>> = {<No data fields>}, <No data fields>}, 
        <std::_Vector_base<char, std::allocator<char> >::_Vector_impl_data> = {
          _M_start = 0x0,
          _M_finish = 0x0,
          _M_end_of_storage = 0x0
        }, <No data fields>}
    }, <No data fields>},
  m_current_query_cost = 0,
  m_current_query_partial_plans = 0,
  lock_info = {
    thread_id = 1,
    suspend = 0x1e25ba90
  },
  LOCK_thd_data = Python Exception <class 'gdb.error'>: There is no member named __data.
,
  LOCK_thd_query = Python Exception <class 'gdb.error'>: There is no member named __data.
,
  LOCK_temporary_tables = Python Exception <class 'gdb.error'>: There is no member named __data.
,
  LOCK_thd_sysvar = Python Exception <class 'gdb.error'>: There is no member named __data.
,
  LOCK_thd_protocol = Python Exception <class 'gdb.error'>: There is no member named __data.
,
  LOCK_thd_security_ctx = Python Exception <class 'gdb.error'>: There is no member named __data.
,
  LOCK_query_plan = Python Exception <class 'gdb.error'>: There is no member named __data.
,
  stmt_map = {
    st_hash = {
      <std::unordered_map<unsigned long, std::unique_ptr<Prepared_statement, std::default_delete<Prepared_statement> >, std::hash<unsigned long>, std::equal_to<unsigned long>, Malloc_allocator<std::pair<unsigned long const, std::unique_ptr<Prepared_statement, std::default_delete<Prepared_statement> > > > >> = {
        _M_h = {
          <std::__detail::_Hashtable_base<unsigned long, std::pair<unsigned long const, std::unique_ptr<Prepared_statement, std::default_delete<Prepared_statement> > >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >> = {
            <std::__detail::_Hash_code_base<unsigned long, std::pair<unsigned long const, std::unique_ptr<Prepared_statement, std::default_delete<Prepared_statement> > >, std::__detail::_Select1st, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>> = {
              <std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Select1st, true>> = {
                <std::__detail::_Select1st> = {<No data fields>}, <No data fields>}, 
              <std::__detail::_Hashtable_ebo_helper<1, std::hash<unsigned long>, true>> = {
                <std::hash<unsigned long>> = {
                  <std::__hash_base<unsigned long, unsigned long>> = {<No data fields>}, <No data fields>}, <No data fields>}, 
              <std::__detail::_Hashtable_ebo_helper<2, std::__detail::_Mod_range_hashing, true>> = {
                <std::__detail::_Mod_range_hashing> = {<No data fields>}, <No data fields>}, <No data fields>}, 
            <std::__detail::_Hashtable_ebo_helper<0, std::equal_to<unsigned long>, true>> = {
              <std::equal_to<unsigned long>> = {
                <std::binary_function<unsigned long, unsigned long, bool>> = {<No data fields>}, <No data fields>}, <No data fields>}, <No data fields>}, 
          <std::__detail::_Map_base<unsigned long, std::pair<unsigned long const, std::unique_ptr<Prepared_statement, std::default_delete<Prepared_statement> > >, Malloc_allocator<std::pair<unsigned long const, std::unique_ptr<Prepared_statement, std::default_delete<Prepared_statement> > > >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>> = {<No data fields>}, 
          <std::__detail::_Insert<unsigned long, std::pair<unsigned long const, std::unique_ptr<Prepared_statement, std::default_delete<Prepared_statement> > >, Malloc_allocator<std::pair<unsigned long const, std::unique_ptr<Prepared_statement, std::default_delete<Prepared_statement> > > >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, false>> = {
            <std::__detail::_Insert_base<unsigned long, std::pair<unsigned long const, std::unique_ptr<Prepared_statement, std::default_delete<Prepared_statement> > >, Malloc_allocator<std::pair<unsigned long const, std::unique_ptr<Prepared_statement, std::default_delete<Prepared_statement> > > >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >> = {<No data fields>}, <No data fields>}, 
          <std::__detail::_Rehash_base<unsigned long, std::pair<unsigned long const, std::unique_ptr<Prepared_statement, std::default_delete<Prepared_statement> > >, Malloc_allocator<std::pair<unsigned long const, std::unique_ptr<Prepared_statement, std::default_delete<Prepared_statement> > > >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, std::integral_constant<bool, true> >> = {<No data fields>}, 
          <std::__detail::_Equality<unsigned long, std::pair<unsigned long const, std::unique_ptr<Prepared_statement, std::default_delete<Prepared_statement> > >, Malloc_allocator<std::pair<unsigned long const, std::unique_ptr<Prepared_statement, std::default_delete<Prepared_statement> > > >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>> = {<No data fields>}, 
          <std::__detail::_Hashtable_alloc<Malloc_allocator<std::__detail::_Hash_node<std::pair<unsigned long const, std::unique_ptr<Prepared_statement, std::default_delete<Prepared_statement> > >, false> > >> = {
            <std::__detail::_Hashtable_ebo_helper<0, Malloc_allocator<std::__detail::_Hash_node<std::pair<unsigned long const, std::unique_ptr<Prepared_statement, std::default_delete<Prepared_statement> > >, false> >, false>> = {
              _M_tp = {
                m_key = 0
              }
            }, <No data fields>}, 
          members of std::_Hashtable<unsigned long, std::pair<unsigned long const, std::unique_ptr<Prepared_statement, std::default_delete<Prepared_statement> > >, Malloc_allocator<std::pair<unsigned long const, std::unique_ptr<Prepared_statement, std::default_delete<Prepared_statement> > > >, std::__detail::_Select1st, std::equal_to<unsigned long>, std::hash<unsigned long>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >:
          _M_buckets = 0x1d9ef3a0,
          _M_bucket_count = 11,
          _M_before_begin = {
            _M_nxt = 0x0
          },
          _M_element_count = 0,
          _M_rehash_policy = {
            static _S_growth_factor = 2,
            _M_max_load_factor = 1,
            _M_next_resize = 11
          },
          _M_single_bucket = 0x0
        }
      }, <No data fields>},
    names_hash = {
      <std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Prepared_statement*, Collation_hasher, Collation_key_equal, Malloc_allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, Prepared_statement*> > >> = {
        _M_h = {
          <std::__detail::_Hashtable_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, Prepared_statement*>, std::__detail::_Select1st, Collation_key_equal, Collation_hasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<true, false, true> >> = {
            <std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, Prepared_statement*>, std::__detail::_Select1st, Collation_hasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>> = {
              <std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Select1st, true>> = {
                <std::__detail::_Select1st> = {<No data fields>}, <No data fields>}, 
              <std::__detail::_Hashtable_ebo_helper<1, Collation_hasher, false>> = {
                _M_tp = {
                  cs = 0x1593c340 <my_charset_utf8_general_ci>,
                  hash_sort = 0xa71620c <my_hash_sort_utf8(CHARSET_INFO const*, uchar const*, size_t, uint64*, uint64*)>
                }
              }, 
              <std::__detail::_Hashtable_ebo_helper<2, std::__detail::_Mod_range_hashing, true>> = {
                <std::__detail::_Mod_range_hashing> = {<No data fields>}, <No data fields>}, <No data fields>}, 
            <std::__detail::_Hashtable_ebo_helper<0, Collation_key_equal, false>> = {
              _M_tp = {
                cs = 0x1593c340 <my_charset_utf8_general_ci>,
                strnncollsp = 0xa716b4b <my_strnncollsp_utf8(CHARSET_INFO const*, uchar const*, size_t, uchar const*, size_t)>
              }
            }, <No data fields>}, 
          <std::__detail::_Map_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, Prepared_statement*>, Malloc_allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, Prepared_statement*> >, std::__detail::_Select1st, Collation_key_equal, Collation_hasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>> = {<No data fields>}, 
          <std::__detail::_Insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, Prepared_statement*>, Malloc_allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, Prepared_statement*> >, std::__detail::_Select1st, Collation_key_equal, Collation_hasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, false>> = {
            <std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, Prepared_statement*>, Malloc_allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, Prepared_statement*> >, std::__detail::_Select1st, Collation_key_equal, Collation_hasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >> = {<No data fields>}, <No data fields>}, 
          <std::__detail::_Rehash_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, Prepared_statement*>, Malloc_allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, Prepared_statement*> >, std::__detail::_Select1st, Collation_key_equal, Collation_hasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, std::integral_constant<bool, true> >> = {<No data fields>}, 
          <std::__detail::_Equality<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, Prepared_statement*>, Malloc_allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, Prepared_statement*> >, std::__detail::_Select1st, Collation_key_equal, Collation_hasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>> = {<No data fields>}, 
          <std::__detail::_Hashtable_alloc<Malloc_allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, Prepared_statement*>, true> > >> = {
            <std::__detail::_Hashtable_ebo_helper<0, Malloc_allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, Prepared_statement*>, true> >, false>> = {
              _M_tp = {
                m_key = 0
              }
            }, <No data fields>}, 
          members of std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, Prepared_statement*>, Malloc_allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, Prepared_statement*> >, std::__detail::_Select1st, Collation_key_equal, Collation_hasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >:
          _M_buckets = 0x1d9eeda0,
          _M_bucket_count = 11,
          _M_before_begin = {
            _M_nxt = 0x0
          },
          _M_element_count = 0,
          _M_rehash_policy = {
            static _S_growth_factor = 2,
            _M_max_load_factor = 1,
            _M_next_resize = 11
          },
          _M_single_bucket = 0x0
        }
      }, <No data fields>},
    m_last_found_statement = 0x0
  },
  thread_stack = 0x7fcf2311da30 "",
  m_main_security_ctx = {
    m_user = {
      m_ptr = 0x0,
      m_length = 0,
      m_charset = 0x1593c340 <my_charset_utf8_general_ci>,
      m_alloced_length = 0,
      m_is_alloced = false
    },
    m_host = {
      m_ptr = 0xb74a3b0 "",
      m_length = 0,
      m_charset = 0x1593c340 <my_charset_utf8_general_ci>,
      m_alloced_length = 0,
      m_is_alloced = false
    },
    m_ip = {
      m_ptr = 0xb74a3b0 "",
      m_length = 0,
      m_charset = 0x1593c340 <my_charset_utf8_general_ci>,
      m_alloced_length = 0,
      m_is_alloced = false
    },
    m_host_or_ip = {
      m_ptr = 0xb74a3b0 "",
      m_length = 0,
      m_charset = 0x1593c340 <my_charset_utf8_general_ci>,
      m_alloced_length = 0,
      m_is_alloced = false
    },
    m_external_user = {
      m_ptr = 0xb74a3b0 "",
      m_length = 0,
      m_charset = 0x1593c340 <my_charset_utf8_general_ci>,
      m_alloced_length = 0,
      m_is_alloced = false
    },
    m_td_hash_stage1 = '\000' <repeats 20 times>,
    m_td_hash_stage1_len = 0,
    m_priv_user = "skip-grants user", '\000' <repeats 79 times>,
    m_priv_user_length = 16,
    m_proxy_user = '\000' <repeats 356 times>,
    m_proxy_user_length = 0,
    m_priv_host = "skip-grants host\000nnodb-max-dirty-pages-pct-lwm\000\000plugin-innodb-max-dirty-pages-pct-lwm", '\000' <repeats 170 times>,
    m_priv_host_length = 16,
    m_master_access = 18446744071562067967,
    m_db_access = 233257023,
    m_password_expired = false,
    m_active_roles = {
      <std::_Vector_base<std::pair<MYSQL_LEX_CSTRING, MYSQL_LEX_CSTRING>, std::allocator<std::pair<MYSQL_LEX_CSTRING, MYSQL_LEX_CSTRING> > >> = {
        _M_impl = {
          <std::allocator<std::pair<MYSQL_LEX_CSTRING, MYSQL_LEX_CSTRING> >> = {
            <__gnu_cxx::new_allocator<std::pair<MYSQL_LEX_CSTRING, MYSQL_LEX_CSTRING> >> = {<No data fields>}, <No data fields>}, 
          <std::_Vector_base<std::pair<MYSQL_LEX_CSTRING, MYSQL_LEX_CSTRING>, std::allocator<std::pair<MYSQL_LEX_CSTRING, MYSQL_LEX_CSTRING> > >::_Vector_impl_data> = {
            _M_start = 0x0,
            _M_finish = 0x0,
            _M_end_of_storage = 0x0
          }, <No data fields>}
      }, <No data fields>},
    m_acl_map = 0x0,
    m_map_checkout_count = 0,
    m_is_locked = false,
    m_is_skip_grants_user = true,
    m_executed_drop_policy = false,
    m_has_drop_policy = false,
    m_drop_policy = {
      _M_t = {
        <std::__uniq_ptr_impl<std::function<void(Security_context*)>, std::default_delete<std::function<void(Security_context*)> > >> = {
          _M_t = {
            <std::_Tuple_impl<0, std::function<void(Security_context*)>*, std::default_delete<std::function<void(Security_context*)> > >> = {
              <std::_Tuple_impl<1, std::default_delete<std::function<void(Security_context*)> > >> = {
                <std::_Head_base<1, std::default_delete<std::function<void(Security_context*)> >, true>> = {
                  <std::default_delete<std::function<void(Security_context*)> >> = {<No data fields>}, <No data fields>}, <No data fields>}, 
              <std::_Head_base<0, std::function<void(Security_context*)>*, false>> = {
                _M_head_impl = 0x0
              }, <No data fields>}, <No data fields>}
        }, <No data fields>}
    },
    m_restrictions = {
      m_db_restrictions = {
        <Abstract_restrictions> = {
          _vptr.Abstract_restrictions = 0xe580ce8 <vtable for DB_restrictions+16>
        }, 
        members of DB_restrictions:
        m_restrictions = {
          _M_h = {
            <std::__detail::_Hashtable_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long>, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<true, false, true> >> = {
              <std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long>, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>> = {
                <std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Select1st, true>> = {
                  <std::__detail::_Select1st> = {<No data fields>}, <No data fields>}, 
                <std::__detail::_Hashtable_ebo_helper<1, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, true>> = {
                  <std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >> = {
                    <std::__hash_base<unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >> = {<No data fields>}, <No data fields>}, <No data fields>}, 
                <std::__detail::_Hashtable_ebo_helper<2, std::__detail::_Mod_range_hashing, true>> = {
                  <std::__detail::_Mod_range_hashing> = {<No data fields>}, <No data fields>}, <No data fields>}, 
              <std::__detail::_Hashtable_ebo_helper<0, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, true>> = {
                <std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >> = {
                  <std::binary_function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool>> = {<No data fields>}, <No data fields>}, <No data fields>}, <No data fields>}, 
            <std::__detail::_Map_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>> = {<No data fields>}, 
            <std::__detail::_Insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, false>> = {
              <std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >> = {<No data fields>}, <No data fields>}, 
            <std::__detail::_Rehash_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, std::integral_constant<bool, true> >> = {<No data fields>}, 
            <std::__detail::_Equality<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>> = {<No data fields>}, 
            <std::__detail::_Hashtable_alloc<std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long>, true> > >> = {
              <std::__detail::_Hashtable_ebo_helper<0, std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long>, true> >, true>> = {
                <std::allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long>, true> >> = {
                  <__gnu_cxx::new_allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long>, true> >> = {<No data fields>}, <No data fields>}, <No data fields>}, <No data fields>}, 
            members of std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long>, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, unsigned long> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >:
            _M_buckets = 0x1e25b8b8,
            _M_bucket_count = 1,
            _M_before_begin = {
              _M_nxt = 0x0
            },
            _M_element_count = 0,
            _M_rehash_policy = {
              static _S_growth_factor = 2,
              _M_max_load_factor = 1,
              _M_next_resize = 0
            },
            _M_single_bucket = 0x0
          }
        }
      }
    },
    m_ro_attribute = {
      read_only = tdsql::meta_data::NORMAL_READ_WRITE,
      delay_thresh = 0,
      watch = false,
      same_idc = tdsql::meta_data::ALL_SLAVE_IDC_EQUAL,
      slave_const = false,
      master_split = false,
      slave_split = false
    },
    m_expire_attribute = 0,
    m_thd = 0x1e25a000
  },
  m_security_ctx = 0x1e25b498,
  m_ipfromproxy = '\000' <repeats 45 times>,
  m_view_ctx_list = empty List<Security_context>,
  m_disable_password_validation = false,
  protocol_text = {
    _M_t = {
      <std::__uniq_ptr_impl<Protocol_text, std::default_delete<Protocol_text> >> = {
        _M_t = {
          <std::_Tuple_impl<0, Protocol_text*, std::default_delete<Protocol_text> >> = {
            <std::_Tuple_impl<1, std::default_delete<Protocol_text> >> = {
              <std::_Head_base<1, std::default_delete<Protocol_text>, true>> = {
                <std::default_delete<Protocol_text>> = {<No data fields>}, <No data fields>}, <No data fields>}, 
            <std::_Head_base<0, Protocol_text*, false>> = {
              _M_head_impl = 0x1d913b00
            }, <No data fields>}, <No data fields>}
      }, <No data fields>}
  },
  protocol_binary = {
    _M_t = {
      <std::__uniq_ptr_impl<Protocol_binary, std::default_delete<Protocol_binary> >> = {
        _M_t = {
          <std::_Tuple_impl<0, Protocol_binary*, std::default_delete<Protocol_binary> >> = {
            <std::_Tuple_impl<1, std::default_delete<Protocol_binary> >> = {
              <std::_Head_base<1, std::default_delete<Protocol_binary>, true>> = {
                <std::default_delete<Protocol_binary>> = {<No data fields>}, <No data fields>}, <No data fields>}, 
            <std::_Head_base<0, Protocol_binary*, false>> = {
              _M_head_impl = 0x1d913b90
            }, <No data fields>}, <No data fields>}
      }, <No data fields>}
  },
  m_protocol = 0x7fcf2311cfe0,
  m_SSL = 0x0,
  query_plan = {
    thd = 0x1e25a000,
    sql_command = SQLCOM_CREATE_TABLE,
    lex = 0x1f4dc028,
    modification_plan = 0x0,
    is_ps = false
  },
  m_current_stage_key = 0,
  m_proc_info = 0xaf5386d "waiting for handler commit",
  where = 0xaf55cbb "field list",
  max_client_packet_length = 1836543021,
  handler_tables_hash = {
    <std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::unique_ptr<TABLE_LIST, My_free_deleter>, Collation_hasher, Collation_key_equal, Malloc_allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<TABLE_LIST, My_free_deleter> > > >> = {
      _M_h = {
        <std::__detail::_Hashtable_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<TABLE_LIST, My_free_deleter> >, std::__detail::_Select1st, Collation_key_equal, Collation_hasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<true, false, true> >> = {
          <std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<TABLE_LIST, My_free_deleter> >, std::__detail::_Select1st, Collation_hasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>> = {
            <std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Select1st, true>> = {
              <std::__detail::_Select1st> = {<No data fields>}, <No data fields>}, 
            <std::__detail::_Hashtable_ebo_helper<1, Collation_hasher, false>> = {
              _M_tp = {
                cs = 0x157c8680 <my_charset_latin1>,
                hash_sort = 0xa694db2 <my_hash_sort_simple(CHARSET_INFO const*, unsigned char const*, unsigned long, unsigned long*, unsigned long*)>
              }
            }, 
            <std::__detail::_Hashtable_ebo_helper<2, std::__detail::_Mod_range_hashing, true>> = {
              <std::__detail::_Mod_range_hashing> = {<No data fields>}, <No data fields>}, <No data fields>}, 
          <std::__detail::_Hashtable_ebo_helper<0, Collation_key_equal, false>> = {
            _M_tp = {
              cs = 0x157c8680 <my_charset_latin1>,
              strnncollsp = 0xa6944f1 <my_strnncollsp_simple(CHARSET_INFO const*, unsigned char const*, unsigned long, unsigned char const*, unsigned long)>
            }
          }, <No data fields>}, 
        <std::__detail::_Map_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<TABLE_LIST, My_free_deleter> >, Malloc_allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<TABLE_LIST, My_free_deleter> > >, std::__detail::_Select1st, Collation_key_equal, Collation_hasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>> = {<No data fields>}, 
        <std::__detail::_Insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<TABLE_LIST, My_free_deleter> >, Malloc_allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<TABLE_LIST, My_free_deleter> > >, std::__detail::_Select1st, Collation_key_equal, Collation_hasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, false>> = {
          <std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<TABLE_LIST, My_free_deleter> >, Malloc_allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<TABLE_LIST, My_free_deleter> > >, std::__detail::_Select1st, Collation_key_equal, Collation_hasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >> = {<No data fields>}, <No data fields>}, 
        <std::__detail::_Rehash_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<TABLE_LIST, My_free_deleter> >, Malloc_allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<TABLE_LIST, My_free_deleter> > >, std::__detail::_Select1st, Collation_key_equal, Collation_hasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, std::integral_constant<bool, true> >> = {<No data fields>}, 
        <std::__detail::_Equality<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<TABLE_LIST, My_free_deleter> >, Malloc_allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<TABLE_LIST, My_free_deleter> > >, std::__detail::_Select1st, Collation_key_equal, Collation_hasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>> = {<No data fields>}, 
        <std::__detail::_Hashtable_alloc<Malloc_allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<TABLE_LIST, My_free_deleter> >, true> > >> = {
          <std::__detail::_Hashtable_ebo_helper<0, Malloc_allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<TABLE_LIST, My_free_deleter> >, true> >, false>> = {
            _M_tp = {
              m_key = 0
            }
          }, <No data fields>}, 
        members of std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<TABLE_LIST, My_free_deleter> >, Malloc_allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<TABLE_LIST, My_free_deleter> > >, std::__detail::_Select1st, Collation_key_equal, Collation_hasher, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >:
        _M_buckets = 0x1d9eed20,
        _M_bucket_count = 11,
        _M_before_begin = {
          _M_nxt = 0x0
        },
        _M_element_count = 0,
        _M_rehash_policy = {
          static _S_growth_factor = 2,
          _M_max_load_factor = 1,
          _M_next_resize = 11
        },
        _M_single_bucket = 0x0
      }
    }, <No data fields>},
  ull_hash = {
    <std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, User_level_lock*, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, Malloc_allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, User_level_lock*> > >> = {
      _M_h = {
        <std::__detail::_Hashtable_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, User_level_lock*>, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<true, false, true> >> = {
          <std::__detail::_Hash_code_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, User_level_lock*>, std::__detail::_Select1st, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, true>> = {
            <std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Select1st, true>> = {
              <std::__detail::_Select1st> = {<No data fields>}, <No data fields>}, 
            <std::__detail::_Hashtable_ebo_helper<1, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, true>> = {
              <std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >> = {
                <std::__hash_base<unsigned long, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >> = {<No data fields>}, <No data fields>}, <No data fields>}, 
            <std::__detail::_Hashtable_ebo_helper<2, std::__detail::_Mod_range_hashing, true>> = {
              <std::__detail::_Mod_range_hashing> = {<No data fields>}, <No data fields>}, <No data fields>}, 
          <std::__detail::_Hashtable_ebo_helper<0, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, true>> = {
            <std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >> = {
              <std::binary_function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool>> = {<No data fields>}, <No data fields>}, <No data fields>}, <No data fields>}, 
        <std::__detail::_Map_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, User_level_lock*>, Malloc_allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, User_level_lock*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>> = {<No data fields>}, 
        <std::__detail::_Insert<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, User_level_lock*>, Malloc_allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, User_level_lock*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, false>> = {
          <std::__detail::_Insert_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, User_level_lock*>, Malloc_allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, User_level_lock*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >> = {<No data fields>}, <No data fields>}, 
        <std::__detail::_Rehash_base<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, User_level_lock*>, Malloc_allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, User_level_lock*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, std::integral_constant<bool, true> >> = {<No data fields>}, 
        <std::__detail::_Equality<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, User_level_lock*>, Malloc_allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, User_level_lock*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true>, true>> = {<No data fields>}, 
        <std::__detail::_Hashtable_alloc<Malloc_allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, User_level_lock*>, true> > >> = {
          <std::__detail::_Hashtable_ebo_helper<0, Malloc_allocator<std::__detail::_Hash_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, User_level_lock*>, true> >, false>> = {
            _M_tp = {
              m_key = 0
            }
          }, <No data fields>}, 
        members of std::_Hashtable<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, User_level_lock*>, Malloc_allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, User_level_lock*> >, std::__detail::_Select1st, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<true, false, true> >:
        _M_buckets = 0x1d9eee20,
        _M_bucket_count = 11,
        _M_before_begin = {
          _M_nxt = 0x0
        },
        _M_element_count = 0,
        _M_rehash_policy = {
          static _S_growth_factor = 2,
          _M_max_load_factor = 1,
          _M_next_resize = 11
        },
        _M_single_bucket = 0x0
      }
    }, <No data fields>},
  dbug_sentry = 4276998655,
  is_killable = true,
  LOCK_current_cond = Python Exception <class 'gdb.error'>: There is no member named __data.
,
  current_mutex = {
    _M_b = {
      _M_p = 0x0
    },
    static is_always_lock_free = <optimized out>
  },
  current_cond = {
    _M_b = {
      _M_p = 0x0
    },
    static is_always_lock_free = <optimized out>
  },
  COND_thr_lock = {
    m_cond = {
      m = 0x0,
      seq = 0x1d929240
    },
    m_psi = 0x0
  },
  m_command = COM_CONNECT,
  m_is_admin_conn = false,
  seq_dbs = {
    _M_t = {
      _M_impl = {
        <std::allocator<std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, THD_seq*, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, THD_seq*> > > > > >> = {
          <__gnu_cxx::new_allocator<std::_Rb_tree_node<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, THD_seq*, std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, THD_seq*> > > > > >> = {<No data fields>}, <No data fields>}, 
        <std::_Rb_tree_key_compare<std::less<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > > >> = {
          _M_key_compare = {
            <std::binary_function<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, bool>> = {<No data fields>}, <No data fields>}
        }, 
        <std::_Rb_tree_header> = {
          _M_header = {
            _M_color = std::_S_red,
            _M_parent = 0x0,
            _M_left = 0x1e25bab8,
            _M_right = 0x1e25bab8
          },
          _M_node_count = 0
        }, <No data fields>}
    }
  },
  ending_internal_txn = false,
  unmasked_server_id = 1,
  server_id = 1,
  file_id = 0,
  peer_port = 0,
  start_time = {
    tv_sec = 1751739924,
    tv_usec = 801728
  },
  user_time = {
    tv_sec = 0,
    tv_usec = 0
  },
  start_utime = 1751739924801728,
  utime_after_lock = 1751739924801728,
  utime_after_query = 0,
  shard_access_mode = MultiShardAccessMode::SingleShardAccess,
  direct_limit = -1,
  flush_no_block_version = 0,
  tdsql_slow_query_num = 0,
  tdsql_last_partition_num = 0,
  tdsql_features_type = 0,
  is_need_kill = false,
  tdsql_const_index_read = false,
  td_set_stmt_ctx = {
    <std::__shared_ptr<TdSetStmtCtx, (__gnu_cxx::_Lock_policy)2>> = {
      <std::__shared_ptr_access<TdSetStmtCtx, (__gnu_cxx::_Lock_policy)2, false, false>> = {<No data fields>}, 
      members of std::__shared_ptr<TdSetStmtCtx, (__gnu_cxx::_Lock_policy)2>:
      _M_ptr = 0x1d17c8d0,
      _M_refcount = {
        _M_pi = 0x1d17c8c0
      }
    }, <No data fields>},
  cluster_cache = {
    <std::__shared_ptr<tdsql::meta_data::TdClusterCache, (__gnu_cxx::_Lock_policy)2>> = {
      <std::__shared_ptr_access<tdsql::meta_data::TdClusterCache, (__gnu_cxx::_Lock_policy)2, false, false>> = {<No data fields>}, 
      members of std::__shared_ptr<tdsql::meta_data::TdClusterCache, (__gnu_cxx::_Lock_policy)2>:
      _M_ptr = 0x1e2457b0,
      _M_refcount = {
        _M_pi = 0x1e2457a0
      }
    }, <No data fields>},
  query_gts = {
    <std::__shared_ptr<tdsql::RequestGts, (__gnu_cxx::_Lock_policy)2>> = {
      <std::__shared_ptr_access<tdsql::RequestGts, (__gnu_cxx::_Lock_policy)2, false, false>> = {<No data fields>}, 
      members of std::__shared_ptr<tdsql::RequestGts, (__gnu_cxx::_Lock_policy)2>:
      _M_ptr = 0x1d9ecb70,
      _M_refcount = {
        _M_pi = 0x1d9ecb60
      }
    }, <No data fields>},
  connection_manager = {
    <std::__shared_ptr<tdsql::connection::ConnectionManager, (__gnu_cxx::_Lock_policy)2>> = {
      <std::__shared_ptr_access<tdsql::connection::ConnectionManager, (__gnu_cxx::_Lock_policy)2, false, false>> = {<No data fields>}, 
      members of std::__shared_ptr<tdsql::connection::ConnectionManager, (__gnu_cxx::_Lock_policy)2>:
      _M_ptr = 0x1e2551e0,
      _M_refcount = {
        _M_pi = 0x1e2551d0
      }
    }, <No data fields>},
  interface_log_format = {
    <std::__shared_ptr<tdsql::log::InterfaceLogFormat, (__gnu_cxx::_Lock_policy)2>> = {
      <std::__shared_ptr_access<tdsql::log::InterfaceLogFormat, (__gnu_cxx::_Lock_policy)2, false, false>> = {<No data fields>}, 
      members of std::__shared_ptr<tdsql::log::InterfaceLogFormat, (__gnu_cxx::_Lock_policy)2>:
      _M_ptr = 0x1d2f98d0,
      _M_refcount = {
        _M_pi = 0x1d2f98c0
      }
    }, <No data fields>},
  sql_log_format = {
    <std::__shared_ptr<tdsql::log::SqlLogFormat, (__gnu_cxx::_Lock_policy)2>> = {
      <std::__shared_ptr_access<tdsql::log::SqlLogFormat, (__gnu_cxx::_Lock_policy)2, false, false>> = {<No data fields>}, 
      members of std::__shared_ptr<tdsql::log::SqlLogFormat, (__gnu_cxx::_Lock_policy)2>:
      _M_ptr = 0x1d89f3c0,
      _M_refcount = {
        _M_pi = 0x1d89f3b0
      }
    }, <No data fields>},
  deadlock = false,
  sql_slave_hint_attribute = {
    <std::__shared_ptr<tdsql::hint::SlaveHintAttribute, (__gnu_cxx::_Lock_policy)2>> = {
      <std::__shared_ptr_access<tdsql::hint::SlaveHintAttribute, (__gnu_cxx::_Lock_policy)2, false, false>> = {<No data fields>}, 
      members of std::__shared_ptr<tdsql::hint::SlaveHintAttribute, (__gnu_cxx::_Lock_policy)2>:
      _M_ptr = 0x1d89f360,
      _M_refcount = {
        _M_pi = 0x1d89f350
      }
    }, <No data fields>},
  enforce_multi_single_phase_txn_mode = false,
  td_table_info = {
    orig_part_def_start = 0,
    orig_part_def_length = 0,
    orig_part_def = {
      <std::__cxx11::basic_string<char, std::char_traits<char>, tdsql::common::CSTLAllocator<char> >> = {
        static npos = <optimized out>,
        _M_dataplus = {
          <tdsql::common::CSTLAllocator<char>> = {
            memory_key_ = 0
          }, 
          members of std::__cxx11::basic_string<char, std::char_traits<char>, tdsql::common::CSTLAllocator<char> >::_Alloc_hider:
          _M_p = 0x1e25bc00 ""
        },
        _M_string_length = 0,
        {
          _M_local_buf = "\000lugin-innodb-ad",
          _M_allocated_capacity = 7578835146920782848
        }
      }, <No data fields>},
    alter_seqid = {
      <std::__cxx11::basic_string<char, std::char_traits<char>, tdsql::common::CSTLAllocator<char> >> = {
        static npos = <optimized out>,
        _M_dataplus = {
          <tdsql::common::CSTLAllocator<char>> = {
            memory_key_ = 0
          }, 
          members of std::__cxx11::basic_string<char, std::char_traits<char>, tdsql::common::CSTLAllocator<char> >::_Alloc_hider:
          _M_p = 0x1e25bc28 ""
        },
        _M_string_length = 0,
        {
          _M_local_buf = '\000' <repeats 15 times>,
          _M_allocated_capacity = 0
        }
      }, <No data fields>},
    alter_seqid_force = 0,
    ddl_local = false,
    ddl_job_id = 0,
    require_dmdl = false,
    from_osc = false,
    set_global_mode = SHOW_SET_GLOBAL,
    shard_db_show_mode = 3
  },
  tmp_sp_table_info = {
    orig_part_def_start = 0,
    orig_part_def_length = 0,
    orig_part_def = {
      <std::__cxx11::basic_string<char, std::char_traits<char>, tdsql::common::CSTLAllocator<char> >> = {
        static npos = <optimized out>,
        _M_dataplus = {
          <tdsql::common::CSTLAllocator<char>> = {
            memory_key_ = 0
          }, 
          members of std::__cxx11::basic_string<char, std::char_traits<char>, tdsql::common::CSTLAllocator<char> >::_Alloc_hider:
          _M_p = 0x1e25bc78 ""
        },
        _M_string_length = 0,
        {
          _M_local_buf = '\000' <repeats 15 times>,
          _M_allocated_capacity = 0
        }
      }, <No data fields>},
    alter_seqid = {
      <std::__cxx11::basic_string<char, std::char_traits<char>, tdsql::common::CSTLAllocator<char> >> = {
        static npos = <optimized out>,
        _M_dataplus = {
          <tdsql::common::CSTLAllocator<char>> = {
            memory_key_ = 0
          }, 
          members of std::__cxx11::basic_string<char, std::char_traits<char>, tdsql::common::CSTLAllocator<char> >::_Alloc_hider:
          _M_p = 0x1e25bca0 ""
        },
        _M_string_length = 0,
        {
          _M_local_buf = '\000' <repeats 15 times>,
          _M_allocated_capacity = 0
        }
      }, <No data fields>},
    alter_seqid_force = 0,
    ddl_local = false,
    ddl_job_id = 0,
    require_dmdl = false,
    from_osc = false,
    set_global_mode = SHOW_SET_GLOBAL,
    shard_db_show_mode = 3
  },
  has_json_opaque_value = false,
  deparse_hint_context = 0x0,
  update_lock_default = TL_WRITE,
  insert_lock_default = TL_WRITE_CONCURRENT_INSERT,
  bytes_sent_old = 0,
  tmp_tables_used = 0,
  tmp_tables_disk_used = 0,
  tmp_tables_size = 0,
  innodb_trx_id = 0,
  innodb_io_reads = 0,
  innodb_io_read = 0,
  innodb_io_reads_wait_timer = 0,
  innodb_lock_que_wait_timer = 0,
  innodb_innodb_que_wait_timer = 0,
  m_execution_mode = 4096,
  m_query_qid_str = {
    m_ptr = 0x0,
    m_length = 0,
    m_charset = 0x157bc6a0 <my_charset_bin>,
    m_alloced_length = 0,
    m_is_alloced = false
  },
  m_thread_id_start_pos_in_qid = 0,
  m_qid_prefix_len = 0,
  m_qid_sequence = 0,
  innodb_was_used = false,
  approx_distinct_pages = {
    static SIZE = 8191,
    bit_set = 0x0,
    LOCK_bit_set = Python Exception <class 'gdb.error'>: There is no member named __data.

  },
  innodb_page_access = 0,
  query_plan_flags = 0,
  query_plan_fsort_passes = 0,
  last_errno = 3778,
  in_sub_stmt = 0,
  skip_wait_timeout = false,
  fill_status_recursion_level = 0,
  fill_variables_recursion_level = 0,
  ha_data = Prealloced_array<Ha_data, 15> = {
    $c0 = (Ha_data) {
  ha_ptr = 0x0,
  ha_ptr_backup = 0x0,
  ha_info = {{
      m_next = 0x0,
      m_ht = 0x0,
      m_flags = 0 '\000'
    }, {
      m_next = 0x0,
      m_ht = 0x0,
      m_flags = 0 '\000'
    }},
  lock = 0x0
},
    $c1 = (Ha_data) {
  ha_ptr = 0x0,
  ha_ptr_backup = 0x0,
  ha_info = {{
      m_next = 0x0,
      m_ht = 0x0,
      m_flags = 0 '\000'
    }, {
      m_next = 0x0,
      m_ht = 0x0,
      m_flags = 0 '\000'
    }},
  lock = 0x0
},
    $c2 = (Ha_data) {
  ha_ptr = 0x0,
  ha_ptr_backup = 0x0,
  ha_info = {{
      m_next = 0x0,
      m_ht = 0x0,
      m_flags = 0 '\000'
    }, {
      m_next = 0x0,
      m_ht = 0x0,
      m_flags = 0 '\000'
    }},
  lock = 0x0
},
    $c3 = (Ha_data) {
  ha_ptr = 0x0,
  ha_ptr_backup = 0x0,
  ha_info = {{
      m_next = 0x0,
      m_ht = 0x0,
      m_flags = 0 '\000'
    }, {
      m_next = 0x0,
      m_ht = 0x0,
      m_flags = 0 '\000'
    }},
  lock = 0x0
},
    $c4 = (Ha_data) {
  ha_ptr = 0x0,
  ha_ptr_backup = 0x0,
  ha_info = {{
      m_next = 0x0,
      m_ht = 0x0,
      m_flags = 0 '\000'
    }, {
      m_next = 0x0,
      m_ht = 0x0,
      m_flags = 0 '\000'
    }},
  lock = 0x0
},
    $c5 = (Ha_data) {
  ha_ptr = 0x0,
  ha_ptr_backup = 0x0,
  ha_info = {{
      m_next = 0x0,
      m_ht = 0x0,
      m_flags = 0 '\000'
    }, {
      m_next = 0x0,
      m_ht = 0x0,
      m_flags = 0 '\000'
    }},
  lock = 0x0
},
    $c6 = (Ha_data) {
  ha_ptr = 0x0,
  ha_ptr_backup = 0x0,
  ha_info = {{
      m_next = 0x0,
      m_ht = 0x0,
      m_flags = 0 '\000'
    }, {
      m_next = 0x0,
      m_ht = 0x0,
      m_flags = 0 '\000'
    }},
  lock = 0x0
},
    $c7 = (Ha_data) {
  ha_ptr = 0x0,
  ha_ptr_backup = 0x0,
  ha_info = {{
      m_next = 0x0,
      m_ht = 0x0,
      m_flags = 0 '\000'
    }, {
      m_next = 0x0,
      m_ht = 0x0,
      m_flags = 0 '\000'
    }},
  lock = 0x0
},
    $c8 = (Ha_data) {
  ha_ptr = 0x0,
  ha_ptr_backup = 0x0,
  ha_info = {{
      m_next = 0x0,
      m_ht = 0x0,
      m_flags = 0 '\000'
    }, {
      m_next = 0x0,
      m_ht = 0x0,
      m_flags = 0 '\000'
    }},
  lock = 0x0
},
    $c9 = (Ha_data) {
  ha_ptr = 0x0,
  ha_ptr_backup = 0x0,
  ha_info = {{
      m_next = 0x0,
      m_ht = 0x0,
      m_flags = 0 '\000'
    }, {
      m_next = 0x0,
      m_ht = 0x0,
      m_flags = 0 '\000'
    }},
  lock = 0x0
},
    $c10 = (Ha_data) {
  ha_ptr = 0x0,
  ha_ptr_backup = 0x0,
  ha_info = {{
      m_next = 0x0,
      m_ht = 0x0,
      m_flags = 0 '\000'
    }, {
      m_next = 0x0,
      m_ht = 0x0,
      m_flags = 0 '\000'
    }},
  lock = 0x0
},
    $c11 = (Ha_data) {
  ha_ptr = 0x0,
  ha_ptr_backup = 0x0,
  ha_info = {{
      m_next = 0x0,
      m_ht = 0x0,
      m_flags = 0 '\000'
    }, {
      m_next = 0x0,
      m_ht = 0x0,
      m_flags = 0 '\000'
    }},
  lock = 0x0
},
    $c12 = (Ha_data) {
  ha_ptr = 0x0,
  ha_ptr_backup = 0x0,
  ha_info = {{
      m_next = 0x0,
      m_ht = 0x0,
      m_flags = 0 '\000'
    }, {
      m_next = 0x0,
      m_ht = 0x0,
      m_flags = 0 '\000'
    }},
  lock = 0x0
},
    $c13 = (Ha_data) {
  ha_ptr = 0x0,
  ha_ptr_backup = 0x0,
  ha_info = {{
      m_next = 0x0,
      m_ht = 0x0,
      m_flags = 0 '\000'
    }, {
      m_next = 0x0,
      m_ht = 0x0,
      m_flags = 0 '\000'
    }},
  lock = 0x0
},
    $c14 = (Ha_data) {
  ha_ptr = 0x0,
  ha_ptr_backup = 0x0,
  ha_info = {{
      m_next = 0x0,
      m_ht = 0x0,
      m_flags = 0 '\000'
    }, {
      m_next = 0x0,
      m_ht = 0x0,
      m_flags = 0 '\000'
    }},
  lock = 0x0
}
  },
  order_deterministic = false,
  binlog_next_event_pos = {
    file_name = 0x0,
    pos = 0
  },
  binlog_row_event_extra_data = 0x0,
  timer = 0x0,
  timer_cache = 0x0,
  deadlock_timer = 0x0,
  deadlock_timer_cache = 0x0,
  skip_readonly_check = false,
  m_binlog_filter_state = THD::BINLOG_FILTER_UNKNOWN,
  current_stmt_binlog_format = BINLOG_FORMAT_ROW,
  binlog_unsafe_warning_flags = 0,
  binlog_table_maps = 0,
  binlog_accessed_db_names = 0x0,
  m_trans_log_file = 0x0,
  m_trans_fixed_log_file = 0x0,
  m_trans_end_pos = 0,
  net = {
    vio = 0x0,
    buff = 0x1e233020 " ",
    buff_end = 0x1e237020 "",
    write_pos = 0x1e233020 " ",
    read_pos = 0x1e233020 " ",
    fd = 1882028129,
    remain_in_buf = 0,
    length = 7578835146920782960,
    buf_length = 7020317294755540590,
    where_b = 0,
    max_packet = 16384,
    max_packet_size = 67108864,
    pkt_nr = 0,
    compress_pkt_nr = 0,
    write_timeout = 60,
    read_timeout = 30,
    retry_count = 10,
    fcntl = 0,
    return_status = 0x0,
    reading_or_writing = 0 '\000',
    save_char = 0 '\000',
    compress = false,
    last_errno = 0,
    error = 0 '\000',
    last_error = '\000' <repeats 463 times>, "\001\000\000\000\000\000\000\000innodb-max-purge-lag-delay\000\000\000\000\000\000plugin-in",
    sqlstate = "nodb-m",
    extension = 0x0
  },
  packet = {
    m_ptr = 0x0,
    m_length = 0,
    m_charset = 0x157bc6a0 <my_charset_bin>,
    m_alloced_length = 0,
    m_is_alloced = false
  },
  m_transaction = {
    _M_t = {
      <std::__uniq_ptr_impl<Transaction_ctx, std::default_delete<Transaction_ctx> >> = {
        _M_t = {
          <std::_Tuple_impl<0, Transaction_ctx*, std::default_delete<Transaction_ctx> >> = {
            <std::_Tuple_impl<1, std::default_delete<Transaction_ctx> >> = {
              <std::_Head_base<1, std::default_delete<Transaction_ctx>, true>> = {
                <std::default_delete<Transaction_ctx>> = {<No data fields>}, <No data fields>}, <No data fields>}, 
            <std::_Head_base<0, Transaction_ctx*, false>> = {
              _M_head_impl = 0x1d2f9440
            }, <No data fields>}, <No data fields>}
      }, <No data fields>}
  },
  m_attachable_trx = 0x0,
  global_read_lock = {
    static m_atomic_active_requests = {
      <std::__atomic_base<int>> = {
        static _S_alignment = 4,
        _M_i = 0
      }, 
      members of std::atomic<int>:
      static is_always_lock_free = true
    },
    m_state = Global_read_lock::GRL_NONE,
    m_mdl_global_shared_lock = 0x0,
    m_mdl_blocks_commits_lock = 0x0
  },
  backup_tables_lock = {
    m_namespace = MDL_key::BACKUP_TABLES,
    m_lock = 0x0
  },
  active_vio = 0x0,
  clone_vio = 0x0,
  change_list = {
    <base_ilist<Item_change_record>> = {
      first = 0x1e25c5a0,
      sentinel = {
        prev = 0x1e25c598,
        next = 0x0
      }
    }, <No data fields>},
  stmt_arena = 0x7fcf2311ccc8,
  table_map_for_update = 0,
  arg_of_last_insert_id_function = false,
  first_successful_insert_id_in_prev_stmt = 0,
  first_successful_insert_id_in_prev_stmt_for_binlog = 0,
  first_successful_insert_id_in_cur_stmt = 0,
  stmt_depends_on_first_successful_insert_id_in_prev_stmt = false,
  auto_inc_intervals_in_cur_stmt_for_binlog = {
    first_interval = {
      interval_min = 0,
      interval_values = 0,
      interval_max = 0,
      next = 0x0
    },
    head = 0x0,
    tail = 0x0,
    current = 0x0,
    elements = 0
  },
  auto_inc_intervals_forced = {
    first_interval = {
      interval_min = 0,
      interval_values = 0,
      interval_max = 0,
      next = 0x0
    },
    head = 0x0,
    tail = 0x0,
    current = 0x0,
    elements = 0
  },
  previous_found_rows = 0,
  current_found_rows = 0,
  is_operating_gtid_table_implicitly = false,
  is_operating_substatement_implicitly = false,
  m_row_count_func = 0,
  num_truncated_fields = 0,
  m_sent_row_count = 0,
  m_examined_row_count = 0,
  m_user_connect = 0x0,
  db_charset = 0x159136a0 <my_charset_utf8mb4_0900_ai_ci>,
  profiling = {
    _M_t = {
      <std::__uniq_ptr_impl<PROFILING, std::default_delete<PROFILING> >> = {
        _M_t = {
          <std::_Tuple_impl<0, PROFILING*, std::default_delete<PROFILING> >> = {
            <std::_Tuple_impl<1, std::default_delete<PROFILING> >> = {
              <std::_Head_base<1, std::default_delete<PROFILING>, true>> = {
                <std::default_delete<PROFILING>> = {<No data fields>}, <No data fields>}, <No data fields>}, 
            <std::_Head_base<0, PROFILING*, false>> = {
              _M_head_impl = 0x1d95e880
            }, <No data fields>}, <No data fields>}
      }, <No data fields>}
  },
  m_stage_progress_psi = 0x0,
  m_digest = 0x0,
  m_token_array = 0x1e20b1a0 "JSON_TABLE('[[\"British link (Sears 1922 truncated)\",\"LINEAR\",\"\",0.20116756],[\"foot\",\"LINEAR\",\"\",0.3048],[\"British yard (Benoit 1895 B)\",\"LINEAR\",\"\",0.9143992042898124],[\"British yard (Sears 1922 truncated)\",\"LINEAR\",\"\",0.914398],[\"British yard (Benoit 1895 A)\",\"LINEAR\",\"\",0.9143992],[\"British chain (Sears 1922)\",\"LINEAR\",\"\",20.116765121552632],[\"Clarke\\'s link\",\"LINEAR\",\"\",0.201166195164],[\"Clarke\\'s yard\",\"LINEAR\",\"\",0.9143917962],[\"British chain (Benoit 1895 A)\",\"LINEAR\",\"\",20.1167824],[\"kilometre\",\"LINEAR\",\"\",1000],[\"US survey foot\",\"LINEAR\",\"\",0.30480060960121924],[\"British yard (Sears 1922)\",\"LINEAR\",\"\",0.9143984146160287],[\"centimetre\",\"LINEAR\",\"\",0.01],[\"millimetre\",\"LINEAR\",\"\",0.001],[\"British foot (Sears 1922)\",\"LINEAR\",\"\",0.3047994715386762],[\"British link (Sears 1922)\",\"LINEAR\",\"\",0.2011676512155263],[\"fathom\",\"LINEAR\",\"\",1.8288],[\"US survey chain\",\"LINEAR\",\"\",20.11684023368047],[\"US survey link\",\"LINEAR\",\"\",0.2011684023368047],[\"metre\",\"LINEAR\",\"\",1],[\"German legal metre\",\"LINEAR\",\"\",1.0000135965]",
  m_digest_state = {
    m_last_id_index = 0,
    m_digest_storage = {
      m_full = false,
      m_byte_count = 0,
      m_hash = '\000' <repeats 31 times>,
      m_charset_number = 0,
      m_token_array = 0x0,
      m_token_array_length = 0
    }
  },
  m_statement_psi = 0x0,
  m_statement_state = {
    m_discarded = false,
    m_in_prepare = false,
    m_no_index_used = 0 '\000',
    m_no_good_index_used = 0 '\000',
    m_flags = 0,
    m_class = 0x0,
    m_thread = 0x0,
    m_timer_start = 1,
    m_timer = 0x6f2d62646f6e6e69,
    m_statement = 0x6b636f6c622d646c,
    m_lock_time = 499884502387,
    m_rows_sent = 7578835146920782960,
    m_rows_examined = 7813513779126169198,
    m_created_tmp_disk_tables = 8316850467080645988,
    m_created_tmp_tables = 1952673837,
    m_select_full_join = 0,
    m_select_full_range_join = 0,
    m_select_range = 0,
    m_select_range_check = 0,
    m_select_scan = 0,
    m_sort_merge_passes = 0,
    m_sort_range = 0,
    m_sort_rows = 0,
    m_sort_scan = 0,
    m_digest = 0x0,
    m_schema_name = '\000' <repeats 191 times>,
    m_schema_name_length = 0,
    m_cs_number = 0,
    m_query_sample = 0x0,
    m_query_sample_length = 0,
    m_query_sample_truncated = false,
    m_parent_sp_share = 0x0,
    m_parent_prepared_stmt = 0x0
  },
  m_transaction_psi = 0x0,
  m_transaction_state = {
    m_flags = 0,
    m_class = 0x0,
    m_thread = 0x0,
    m_timer_start = 0,
    m_timer = 0x0,
    m_transaction = 0x0,
    m_read_only = false,
    m_autocommit = false,
    m_statement_count = 0,
    m_savepoint_count = 0,
    m_rollback_to_savepoint_count = 0,
    m_release_savepoint_count = 0
  },
  m_idle_psi = 0x0,
  m_idle_state = {
    m_flags = 0,
    m_thread = 0x0,
    m_timer_start = 0,
    m_timer = 0x0,
    m_wait = 0x0
  },
  m_server_idle = false,
  query_id = 0,
  statement_id_counter = 3,
  rand_saved_seed1 = 0,
  rand_saved_seed2 = 0,
  real_id = 140527623333632,
  m_thread_id = 1,
  m_created_bthread_id = 0,
  tmp_table = 0,
  server_status = 2,
  open_options = 0,
  system_thread = SYSTEM_THREAD_DD_INITIALIZE,
  tx_isolation = ISO_REPEATABLE_READ,
  tx_read_only = false,
  tx_priority = 0,
  thd_tx_priority = 0,
  check_for_truncated_fields = CHECK_FIELD_IGNORE,
  updated_row_count = 0,
  sent_row_count_2 = 0,
  user_var_events = empty Prealloced_array<Binlog_user_var_event*, 2>,
  user_var_events_alloc = 0x0,
  next_to_commit = 0x0,
  binlog_need_explicit_defaults_ts = false,
  commit_error = THD::CE_NONE,
  durability_property = HA_REGULAR_DURABILITY,
  killed = {
    static _S_min_alignment = 4,
    static _S_alignment = 4,
    _M_i = THD::NOT_KILLED,
    static is_always_lock_free = <optimized out>
  },
  running_explain_analyze = false,
  kill_immunizer = 0x0,
  scramble = '\000' <repeats 20 times>,
  slave_thread = false,
  password = 0 '\000',
  m_is_fatal_error = false,
  transaction_rollback_request = false,
  is_fatal_sub_stmt_error = false,
  query_start_usec_used = false,
  rand_used = false,
  time_zone_used = false,
  in_lock_tables = false,
  is_slave_error = false,
  thread_specific_used = false,
  charset_is_system_charset = false,
  charset_is_collation_connection = true,
  charset_is_character_set_filesystem = true,
  enable_slow_log = false,
  derived_tables_processing = false,
  parsing_system_view = false,
  sp_runtime_ctx = 0x0,
  sp_proc_cache = 0x0,
  sp_func_cache = 0x0,
  query_name_consts = 0,
  current_linfo = 0x0,
  current_connect_time = 17517399248017306,
  last_global_update_time = 17517399248017306,
  busy_time = 0,
  diff_total_busy_time = 0,
  cpu_time = 0,
  diff_total_cpu_time = 0,
  bytes_received = 0,
  diff_total_bytes_received = 0,
  bytes_sent = 0,
  diff_total_bytes_sent = 0,
  binlog_bytes_written = 0,
  diff_total_binlog_bytes_written = 0,
  diff_total_sent_rows = 0,
  diff_total_updated_rows = 0,
  diff_total_read_rows = 0,
  diff_select_commands = 0,
  diff_update_commands = 0,
  diff_other_commands = 0,
  diff_commit_trans = 4,
  diff_rollback_trans = 0,
  diff_denied_connections = 0,
  diff_lost_connections = 0,
  diff_access_denied_errors = 0,
  diff_empty_queries = 0,
  query_delay_millis = 0,
  sys_var_tmp = {
    bool_value = false,
    long_value = 0,
    ulong_value = 0,
    ulonglong_value = 0,
    double_value = 0
  },
  binlog_evt_union = {
    do_union = false,
    unioned_events = false,
    unioned_events_trans = false,
    first_query_id = 0
  },
  m_parser_state = 0x0,
  locked_tables_list = {
    m_locked_tables_root = {
      static s_dummy_target = 0 '\000',
      m_current_block = 0x0,
      m_current_free_start = 0x1900b0a0 <MEM_ROOT::s_dummy_target> "",
      m_current_free_end = 0x1900b0a0 <MEM_ROOT::s_dummy_target> "",
      m_block_size = 8192,
      m_orig_block_size = 8192,
      m_max_capacity = 0,
      m_allocated_size = 0,
      m_error_for_capacity_exceeded = false,
      m_error_handler = 0x552c7aa <sql_alloc_error_handler()>,
      m_psi_key = 0
    },
    m_locked_tables = 0x0,
    m_locked_tables_last = 0x1e25cb98,
    m_reopen_array = 0x0,
    m_locked_tables_count = 0,
    m_rename_tablespace_mdls = {
      <std::_Vector_base<Locked_tables_list::MDL_ticket_pair, std::allocator<Locked_tables_list::MDL_ticket_pair> >> = {
        _M_impl = {
          <std::allocator<Locked_tables_list::MDL_ticket_pair>> = {
            <__gnu_cxx::new_allocator<Locked_tables_list::MDL_ticket_pair>> = {<No data fields>}, <No data fields>}, 
          <std::_Vector_base<Locked_tables_list::MDL_ticket_pair, std::allocator<Locked_tables_list::MDL_ticket_pair> >::_Vector_impl_data> = {
            _M_start = 0x0,
            _M_finish = 0x0,
            _M_end_of_storage = 0x0
          }, <No data fields>}
      }, <No data fields>}
  },
  work_part_info = 0x0,
  audit_class_plugins = {
    <Prealloced_array<st_plugin_int**, 2>> = empty Prealloced_array<st_plugin_int**, 2>, <No data fields>},
  audit_class_mask = Prealloced_array<unsigned long, 11>Python Exception <class 'gdb.error'>: There is no member or method named ext.
,
  debug_sync_control = 0x0,
  m_enable_plugins = true,
  m_audited = true,
  m_release_resources_done = false,
  cleanup_done = false,
  owned_gtid = {
    sidno = 0,
    gno = 0,
    static MAX_TEXT_LENGTH = 56
  },
  static OWNED_SIDNO_GTID_SET = -1,
  static OWNED_SIDNO_ANONYMOUS = -2,
  owned_sid = {
    static BYTE_LENGTH = 16,
    bytes = '\000' <repeats 15 times>,
    static TEXT_LENGTH = 36,
    static BIT_LENGTH = 128,
    static NUMBER_OF_SECTIONS = 5,
    static bytes_per_section = {4, 2, 2, 2, 6},
    static hex_to_byte = <same as static member of an already seen type>
  },
  m_se_gtid_flags = {
    <std::_Base_bitset<1>> = {
      _M_w = 0
    }, <No data fields>},
  rpl_thd_ctx = {
    m_session_gtids_ctx = {
      _vptr.Session_consistency_gtids_ctx = 0xe6dc840 <vtable for Session_consistency_gtids_ctx+16>,
      m_sid_map = 0x0,
      m_gtid_set = 0x0,
      m_listener = 0x0,
      m_curr_session_track_gtids = 0
    },
    m_dependency_tracker_ctx = {
      m_last_session_sequence_number = 0
    },
    m_last_used_gtid_tracker_ctx = {
      _vptr.Last_used_gtid_tracker_ctx = 0xe6dc820 <vtable for Last_used_gtid_tracker_ctx+16>,
      m_last_used_gtid = {
        _M_t = {
          <std::__uniq_ptr_impl<Gtid, std::default_delete<Gtid> >> = {
            _M_t = {
              <std::_Tuple_impl<0, Gtid*, std::default_delete<Gtid> >> = {
                <std::_Tuple_impl<1, std::default_delete<Gtid> >> = {
                  <std::_Head_base<1, std::default_delete<Gtid>, true>> = {
                    <std::default_delete<Gtid>> = {<No data fields>}, <No data fields>}, <No data fields>}, 
                <std::_Head_base<0, Gtid*, false>> = {
                  _M_head_impl = 0x1d187990
                }, <No data fields>}, <No data fields>}
          }, <No data fields>}
      }
    },
    m_transaction_compression_ctx = {
      _vptr.Transaction_compression_ctx = 0xe6dc800 <vtable for Transaction_compression_ctx+16>,
      static DEFAULT_COMPRESSION_BUFFER_SIZE = 1024,
      m_compressor = 0x0
    },
    rpl_channel_type = NO_CHANNEL_INFO
  },
  skip_gtid_rollback = false,
  is_commit_in_middle_of_statement = false,
  has_gtid_consistency_violation = false,
  event_scheduler = {
    data = 0x0
  },
  m_psi = {
    _M_b = {
      _M_p = 0x0
    },
    static is_always_lock_free = <optimized out>
  },
  opt_trace = {
    static flag_names = {0xb79415a "enabled", 0xb794162 "one_line", 0xb79416b "default", 0x0},
    static feature_names = <same as static member of an already seen type>,
    static default_features = (Opt_trace_context::GREEDY_SEARCH | Opt_trace_context::RANGE_OPTIMIZER | Opt_trace_context::DYNAMIC_RANGE | Opt_trace_context::REPEATED_SUBSELECT),
    pimpl = 0x0,
    I_S_disabled = 0
  },
  m_internal_handler = 0x0,
  main_mem_root = {
    static s_dummy_target = 0 '\000',
    m_current_block = 0x1f52ac20,
    m_current_free_start = 0x1f52b470 "",
    m_current_free_end = 0x1f52cc28 "",
    m_block_size = 12288,
    m_orig_block_size = 8192,
    m_max_capacity = 0,
    m_allocated_size = 8192,
    m_error_for_capacity_exceeded = false,
    m_error_handler = 0x552c7aa <sql_alloc_error_handler()>,
    m_psi_key = 0
  },
  main_da = {
    m_stacked_da = 0x0,
    m_condition_root = {
      static s_dummy_target = 0 '\000',
      m_current_block = 0x0,
      m_current_free_start = 0x1900b0a0 <MEM_ROOT::s_dummy_target> "",
      m_current_free_end = 0x1900b0a0 <MEM_ROOT::s_dummy_target> "",
      m_block_size = 2048,
      m_orig_block_size = 2048,
      m_max_capacity = 0,
      m_allocated_size = 0,
      m_error_for_capacity_exceeded = false,
      m_error_handler = 0x552c7aa <sql_alloc_error_handler()>,
      m_psi_key = 0
    },
    m_conditions_list = {
      <I_P_List_counter> = {
        m_counter = 0
      }, 
      <I_P_List_fast_push_back<Sql_condition>> = {
        m_last = 0x1e25cdd0
      }, 
      members of I_P_List<Sql_condition, I_P_List_adapter<Sql_condition, &Sql_condition::m_next_condition, &Sql_condition::m_prev_condition>, I_P_List_counter, I_P_List_fast_push_back<Sql_condition> >:
      m_first = 0x0
    },
    m_preexisting_sql_conditions = empty List<Sql_condition const>,
    m_is_sent = false,
    m_can_overwrite_status = false,
    m_allow_unlimited_conditions = false,
    m_status = Diagnostics_area::DA_EMPTY,
    m_message_text = "\000\000\000\000\000\000\000\000\001\000\000\000\000\000\000\000innodb-optimize-fulltext-only\000\000\000plugin-innodb-optimize-fulltext-only", '\000' <repeats 427 times>,
    m_returned_sqlstate = "\000\000\000\000\000",
    m_mysql_errno = 0,
    m_affected_rows = 0,
    m_last_insert_id = 0,
    m_last_statement_cond_count = 0,
    m_current_statement_cond_count = 0,
    m_current_statement_cond_count_by_qb = {0, 0, 0},
    m_current_row_for_condition = 1,
    m_saved_error_count = 0,
    m_saved_warn_count = 0,
    m_user_condition_value = 0x0
  },
  m_parser_da = {
    m_stacked_da = 0x0,
    m_condition_root = {
      static s_dummy_target = 0 '\000',
      m_current_block = 0x0,
      m_current_free_start = 0x1900b0a0 <MEM_ROOT::s_dummy_target> "",
      m_current_free_end = 0x1900b0a0 <MEM_ROOT::s_dummy_target> "",
      m_block_size = 2048,
      m_orig_block_size = 2048,
      m_max_capacity = 0,
      m_allocated_size = 0,
      m_error_for_capacity_exceeded = false,
      m_error_handler = 0x552c7aa <sql_alloc_error_handler()>,
      m_psi_key = 0
    },
    m_conditions_list = {
      <I_P_List_counter> = {
        m_counter = 0
      }, 
      <I_P_List_fast_push_back<Sql_condition>> = {
        m_last = 0x1e25d0b8
      }, 
      members of I_P_List<Sql_condition, I_P_List_adapter<Sql_condition, &Sql_condition::m_next_condition, &Sql_condition::m_prev_condition>, I_P_List_counter, I_P_List_fast_push_back<Sql_condition> >:
      m_first = 0x0
    },
    m_preexisting_sql_conditions = empty List<Sql_condition const>,
    m_is_sent = false,
    m_can_overwrite_status = false,
    m_allow_unlimited_conditions = false,
    m_status = Diagnostics_area::DA_EMPTY,
    m_message_text = '\000' <repeats 448 times>, "\001\000\000\000\000\000\000\000innodb-ft-aux-table\000\000\000\000\000plugin-innodb-ft-aux-table\000\000\000\000\000",
    m_returned_sqlstate = "\000\000\000\000\000",
    m_mysql_errno = 0,
    m_affected_rows = 0,
    m_last_insert_id = 0,
    m_last_statement_cond_count = 0,
    m_current_statement_cond_count = 0,
    m_current_statement_cond_count_by_qb = {0, 0, 0},
    m_current_row_for_condition = 1,
    m_saved_error_count = 0,
    m_saved_warn_count = 0,
    m_user_condition_value = 0x0
  },
  m_query_rewrite_plugin_da = {
    m_stacked_da = 0x0,
    m_condition_root = {
      static s_dummy_target = 0 '\000',
      m_current_block = 0x0,
      m_current_free_start = 0x1900b0a0 <MEM_ROOT::s_dummy_target> "",
      m_current_free_end = 0x1900b0a0 <MEM_ROOT::s_dummy_target> "",
      m_block_size = 2048,
      m_orig_block_size = 2048,
      m_max_capacity = 0,
      m_allocated_size = 0,
      m_error_for_capacity_exceeded = false,
      m_error_handler = 0x552c7aa <sql_alloc_error_handler()>,
      m_psi_key = 0
    },
    m_conditions_list = {
      <I_P_List_counter> = {
        m_counter = 0
      }, 
      <I_P_List_fast_push_back<Sql_condition>> = {
        m_last = 0x1e25d3a0
      }, 
      members of I_P_List<Sql_condition, I_P_List_adapter<Sql_condition, &Sql_condition::m_next_condition, &Sql_condition::m_prev_condition>, I_P_List_counter, I_P_List_fast_push_back<Sql_condition> >:
      m_first = 0x0
    },
    m_preexisting_sql_conditions = empty List<Sql_condition const>,
    m_is_sent = false,
    m_can_overwrite_status = false,
    m_allow_unlimited_conditions = false,
    m_status = Diagnostics_area::DA_EMPTY,
    m_message_text = '\000' <repeats 280 times>, "\001\000\000\000\000\000\000\000innodb-ft-enable-diag-print\000\000\000\000\000plugin-innodb-ft-enable-diag-print", '\000' <repeats 157 times>,
    m_returned_sqlstate = "\000\000\000\000\000",
    m_mysql_errno = 0,
    m_affected_rows = 0,
    m_last_insert_id = 0,
    m_last_statement_cond_count = 0,
    m_current_statement_cond_count = 0,
    m_current_statement_cond_count_by_qb = {0, 0, 0},
    m_current_row_for_condition = 1,
    m_saved_error_count = 0,
    m_saved_warn_count = 0,
    m_user_condition_value = 0x0
  },
  m_query_rewrite_plugin_da_ptr = 0x1e25d338,
  m_stmt_da = 0x7fcf2311d150,
  m_binlog_invoker = false,
  m_invoker_user = {
    str = 0x0,
    length = 0
  },
  m_invoker_host = {
    str = 0x0,
    length = 0
  },
  m_cost_model = {
    _vptr.Cost_model_server = 0xe66ff70 <vtable for Cost_model_server+16>,
    m_cost_constants = 0x1d2bc6c0,
    m_server_cost_constants = 0x1d2bc6c8,
    m_initialized = true
  },
  session_tracker = {
    m_trackers = {0x1d9e81a0, 0x1d1879b0, 0x1d1879a0, 0x1d9e81e0, 0x1d9e8220}
  },
  session_sysvar_res_mgr = {
    m_sysvar_string_alloc_hash = {
      <std::unordered_map<char**, std::unique_ptr<char, My_free_deleter>, std::hash<char**>, std::equal_to<char**>, Malloc_allocator<std::pair<char** const, std::unique_ptr<char, My_free_deleter> > > >> = {
        _M_h = {
          <std::__detail::_Hashtable_base<char**, std::pair<char** const, std::unique_ptr<char, My_free_deleter> >, std::__detail::_Select1st, std::equal_to<char**>, std::hash<char**>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Hashtable_traits<false, false, true> >> = {
            <std::__detail::_Hash_code_base<char**, std::pair<char** const, std::unique_ptr<char, My_free_deleter> >, std::__detail::_Select1st, std::hash<char**>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, false>> = {
              <std::__detail::_Hashtable_ebo_helper<0, std::__detail::_Select1st, true>> = {
                <std::__detail::_Select1st> = {<No data fields>}, <No data fields>}, 
              <std::__detail::_Hashtable_ebo_helper<1, std::hash<char**>, true>> = {
                <std::hash<char**>> = {
                  <std::__hash_base<unsigned long, char**>> = {<No data fields>}, <No data fields>}, <No data fields>}, 
              <std::__detail::_Hashtable_ebo_helper<2, std::__detail::_Mod_range_hashing, true>> = {
                <std::__detail::_Mod_range_hashing> = {<No data fields>}, <No data fields>}, <No data fields>}, 
            <std::__detail::_Hashtable_ebo_helper<0, std::equal_to<char**>, true>> = {
              <std::equal_to<char**>> = {
                <std::binary_function<char**, char**, bool>> = {<No data fields>}, <No data fields>}, <No data fields>}, <No data fields>}, 
          <std::__detail::_Map_base<char**, std::pair<char** const, std::unique_ptr<char, My_free_deleter> >, Malloc_allocator<std::pair<char** const, std::unique_ptr<char, My_free_deleter> > >, std::__detail::_Select1st, std::equal_to<char**>, std::hash<char**>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>> = {<No data fields>}, 
          <std::__detail::_Insert<char**, std::pair<char** const, std::unique_ptr<char, My_free_deleter> >, Malloc_allocator<std::pair<char** const, std::unique_ptr<char, My_free_deleter> > >, std::__detail::_Select1st, std::equal_to<char**>, std::hash<char**>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, false>> = {
            <std::__detail::_Insert_base<char**, std::pair<char** const, std::unique_ptr<char, My_free_deleter> >, Malloc_allocator<std::pair<char** const, std::unique_ptr<char, My_free_deleter> > >, std::__detail::_Select1st, std::equal_to<char**>, std::hash<char**>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >> = {<No data fields>}, <No data fields>}, 
          <std::__detail::_Rehash_base<char**, std::pair<char** const, std::unique_ptr<char, My_free_deleter> >, Malloc_allocator<std::pair<char** const, std::unique_ptr<char, My_free_deleter> > >, std::__detail::_Select1st, std::equal_to<char**>, std::hash<char**>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, std::integral_constant<bool, true> >> = {<No data fields>}, 
          <std::__detail::_Equality<char**, std::pair<char** const, std::unique_ptr<char, My_free_deleter> >, Malloc_allocator<std::pair<char** const, std::unique_ptr<char, My_free_deleter> > >, std::__detail::_Select1st, std::equal_to<char**>, std::hash<char**>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true>, true>> = {<No data fields>}, 
          <std::__detail::_Hashtable_alloc<Malloc_allocator<std::__detail::_Hash_node<std::pair<char** const, std::unique_ptr<char, My_free_deleter> >, false> > >> = {
            <std::__detail::_Hashtable_ebo_helper<0, Malloc_allocator<std::__detail::_Hash_node<std::pair<char** const, std::unique_ptr<char, My_free_deleter> >, false> >, false>> = {
              _M_tp = {
                m_key = 0
              }
            }, <No data fields>}, 
          members of std::_Hashtable<char**, std::pair<char** const, std::unique_ptr<char, My_free_deleter> >, Malloc_allocator<std::pair<char** const, std::unique_ptr<char, My_free_deleter> > >, std::__detail::_Select1st, std::equal_to<char**>, std::hash<char**>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >:
          _M_buckets = 0x1d9eeca0,
          _M_bucket_count = 11,
          _M_before_begin = {
            _M_nxt = 0x1d95eb20
          },
          _M_element_count = 6,
          _M_rehash_policy = {
            static _S_growth_factor = 2,
            _M_max_load_factor = 1,
            _M_next_resize = 11
          },
          _M_single_bucket = 0x0
        }
      }, <No data fields>}
  },
  duplicate_slave_id = false,
  is_a_srv_session_thd = false,
  m_plugin = 0x0,
  m_is_plugin_fake_ddl = false,
  tmp_table_seq_id = 0,
  debug_binlog_xid_last = {
    formatID = -1,
    gtrid_length = 0,
    bqual_length = 0,
    data = '\000' <repeats 127 times>,
    static ser_buf_size = 297
  },
  waiting_for_disk_space = false,
  m_secondary_engine_optimization = Secondary_engine_optimization::PRIMARY_ONLY,
  m_secondary_engine_forced = false,
  m_is_system_user = {
    _M_base = {
      static _S_alignment = 1,
      _M_i = true
    },
    static is_always_lock_free = true
  },
  m_transactional_ddl = {
    m_thd = 0x1e25a000,
    m_hton = 0x0,
    m_db = {
      static npos = <optimized out>,
      _M_dataplus = {
        <Stateless_allocator<char, dd::String_type_alloc, My_free_functor>> = {<No data fields>}, 
        members of std::__cxx11::basic_string<char, std::char_traits<char>, Stateless_allocator<char, dd::String_type_alloc, My_free_functor> >::_Alloc_hider:
        _M_p = 0x1e25d7c0 ""
      },
      _M_string_length = 0,
      {
        _M_local_buf = '\000' <repeats 15 times>,
        _M_allocated_capacity = 0
      }
    },
    m_tablename = {
      static npos = <optimized out>,
      _M_dataplus = {
        <Stateless_allocator<char, dd::String_type_alloc, My_free_functor>> = {<No data fields>}, 
        members of std::__cxx11::basic_string<char, std::char_traits<char>, Stateless_allocator<char, dd::String_type_alloc, My_free_functor> >::_Alloc_hider:
        _M_p = 0x1e25d7e0 ""
      },
      _M_string_length = 0,
      {
        _M_local_buf = '\000' <repeats 15 times>,
        _M_allocated_capacity = 0
      }
    }
  },
  m_inside_system_variable_global_update = false,
  bind_parameter_values = 0x0,
  bind_parameter_values_count = 0,
  m_is_extra_thread = true,
  tmp_thr_malloc = 0x0,
  m_query_body_pos_for_explain = 0,
  m_locked_tables_on_set = {
    <std::__cxx11::_List_base<Simple_table_ident*, std::allocator<Simple_table_ident*> >> = {
      _M_impl = {
        <std::allocator<std::_List_node<Simple_table_ident*> >> = {
          <__gnu_cxx::new_allocator<std::_List_node<Simple_table_ident*> >> = {<No data fields>}, <No data fields>}, 
        members of std::__cxx11::_List_base<Simple_table_ident*, std::allocator<Simple_table_ident*> >::_List_impl:
        _M_node = {
          <std::__detail::_List_node_base> = {
            _M_next = 0x1e25d820,
            _M_prev = 0x1e25d820
          }, 
          members of std::__detail::_List_node_header:
          _M_size = 0
        }
      }
    }, <No data fields>},
  m_cur_stmt = 0x0,
  m_audit_log_query_string = {
    str = 0x0,
    length = 0
  },
  is_skip_deparse = false,
  m_in_fqs_prepare_ctx = false,
  fqs_change_list = {
    <base_ilist<Item_change_record>> = {
      first = 0x1e25d860,
      sentinel = {
        prev = 0x1e25d858,
        next = 0x0
      }
    }, <No data fields>}
}
+set print object on
+set print array-indexes on
+i args
thd = 0x1e25a000
q_buf = @0x7fcf2311d4d0: {
  static npos = <optimized out>,
  _M_dataplus = {
    <Stateless_allocator<char, dd::String_type_alloc, My_free_functor>> = {<No data fields>}, 
    members of std::__cxx11::basic_string<char, std::char_traits<char>, Stateless_allocator<char, dd::String_type_alloc, My_free_functor> >::_Alloc_hider:
    _M_p = 0x1e1fd6e0 "CREATE TABLE dd_properties(\n  properties MEDIUMBLOB\n) ENGINE=INNODB DEFAULT CHARSET=utf8 COLLATE=utf8_bin ROW_FORMAT=DYNAMIC STATS_PERSISTENT=0 TABLESPACE=mysql"
  },
  _M_string_length = 160,
  {
    _M_local_buf = "\240\000\000\000\000\000\000\000\251\265\311\004\000\000\000",
    _M_allocated_capacity = 160
  }
}
+q
+set auto-load safe-path /root/.gdb
+set index-cache on
Warning: 'set index-cache on', an alias for the command 'set index-cache enabled', is deprecated.
Use 'set index-cache enabled on'.

+set print pretty
+set follow-fork-mode child
+set print elements 0
+handle SIGPIPE nostop
+handle SIGUSR1 nostop
+handle SIGILL pass nostop noprint
+source /root/.gdb/sqlengine-gdb.py
+source /root/.gdb/std-gdb.gdbinit
+define pvector
+document pvector
+define plist
+document plist
+define plist_member
+document plist_member
+define pmap
+document pmap
+define pmap_member
+document pmap_member
+define pset
+document pset
+define pdequeue
+document pdequeue
+define pstack
+document pstack
+define pqueue
+document pqueue
+define ppqueue
+document ppqueue
+define pbitset
+document pbitset
+define pstring
+document pstring
+define pwstring
+document pwstring
+set print pretty on
+set print object on
+set print static-members on
+set print vtbl on
+set print demangle on
+set demangle-style gnu-v3
+set print sevenbit-strings off
+set follow-fork-mode child
+set detach-on-fork off
+python
Traceback (most recent call last):
  File "<string>", line 3, in <module>
ModuleNotFoundError: No module named 'libstdcxx'
/root/.gdbinit:31: Error in sourced command file:
Error while executing Python code.
Reading symbols from /data/workspace/TDProxyEngine/tdsql/bld/bin/sqlengine...
/usr/share/gcc-8/python/libstdcxx/./my-core-sqlengine-295720-1751739926: No such file or directory.
+q
+set auto-load safe-path /root/.gdb
+set index-cache on
Warning: 'set index-cache on', an alias for the command 'set index-cache enabled', is deprecated.
Use 'set index-cache enabled on'.

+set print pretty
+set follow-fork-mode child
+set print elements 0
+handle SIGPIPE nostop
+handle SIGUSR1 nostop
+handle SIGILL pass nostop noprint
+source /root/.gdb/sqlengine-gdb.py
+source /root/.gdb/std-gdb.gdbinit
+define pvector
+document pvector
+define plist
+document plist
+define plist_member
+document plist_member
+define pmap
+document pmap
+define pmap_member
+document pmap_member
+define pset
+document pset
+define pdequeue
+document pdequeue
+define pstack
+document pstack
+define pqueue
+document pqueue
+define ppqueue
+document ppqueue
+define pbitset
+document pbitset
+define pstring
+document pstring
+define pwstring
+document pwstring
+set print pretty on
+set print object on
+set print static-members on
+set print vtbl on
+set print demangle on
+set demangle-style gnu-v3
+set print sevenbit-strings off
+set follow-fork-mode child
+set detach-on-fork off
+python
Traceback (most recent call last):
  File "<string>", line 3, in <module>
ModuleNotFoundError: No module named 'libstdcxx'
/root/.gdbinit:31: Error in sourced command file:
Error while executing Python code.
Reading symbols from /data/workspace/TDProxyEngine/tdsql/bld/bin/sqlengine...
/root/./my-core-sqlengine-295720-1751739926: No such file or directory.
+q
+set auto-load safe-path /root/.gdb
+set index-cache on
Warning: 'set index-cache on', an alias for the command 'set index-cache enabled', is deprecated.
Use 'set index-cache enabled on'.

+set print pretty
+set follow-fork-mode child
+set print elements 0
+handle SIGPIPE nostop
+handle SIGUSR1 nostop
+handle SIGILL pass nostop noprint
+source /root/.gdb/sqlengine-gdb.py
+source /root/.gdb/std-gdb.gdbinit
+define pvector
+document pvector
+define plist
+document plist
+define plist_member
+document plist_member
+define pmap
+document pmap
+define pmap_member
+document pmap_member
+define pset
+document pset
+define pdequeue
+document pdequeue
+define pstack
+document pstack
+define pqueue
+document pqueue
+define ppqueue
+document ppqueue
+define pbitset
+document pbitset
+define pstring
+document pstring
+define pwstring
+document pwstring
+set print pretty on
+set print object on
+set print static-members on
+set print vtbl on
+set print demangle on
+set demangle-style gnu-v3
+set print sevenbit-strings off
+set follow-fork-mode child
+set detach-on-fork off
+python
Traceback (most recent call last):
  File "<string>", line 3, in <module>
ModuleNotFoundError: No module named 'libstdcxx'
/root/.gdbinit:31: Error in sourced command file:
Error while executing Python code.
+info pretty-printer
global pretty-printers:
  builtin
    mpx_bound128
  mysqld
    AccessPath
    Bounds_checked_array
    Func_ptr
    List
    Mem_root_array
    Prealloced_array
    mem_root_deque
    mysql_mutex_t
+q
+set auto-load safe-path /root/.gdb
+set index-cache on
Warning: 'set index-cache on', an alias for the command 'set index-cache enabled', is deprecated.
Use 'set index-cache enabled on'.

+set print pretty
+set follow-fork-mode child
+set print elements 0
+handle SIGPIPE nostop
+handle SIGUSR1 nostop
+handle SIGILL pass nostop noprint
+source /root/.gdb/sqlengine-gdb.py
+source /root/.gdb/std-gdb.gdbinit
+define pvector
+document pvector
+define plist
+document plist
+define plist_member
+document plist_member
+define pmap
+document pmap
+define pmap_member
+document pmap_member
+define pset
+document pset
+define pdequeue
+document pdequeue
+define pstack
+document pstack
+define pqueue
+document pqueue
+define ppqueue
+document ppqueue
+define pbitset
+document pbitset
+define pstring
+document pstring
+define pwstring
+document pwstring
+set print pretty on
+set print object on
+set print static-members on
+set print vtbl on
+set print demangle on
+set demangle-style gnu-v3
+set print sevenbit-strings off
+set follow-fork-mode child
+set detach-on-fork off
+python
+q
+set auto-load safe-path /root/.gdb
+set index-cache on
Warning: 'set index-cache on', an alias for the command 'set index-cache enabled', is deprecated.
Use 'set index-cache enabled on'.

+set print pretty
+set follow-fork-mode child
+set print elements 0
+handle SIGPIPE nostop
+handle SIGUSR1 nostop
+handle SIGILL pass nostop noprint
+source /root/.gdb/sqlengine-gdb.py
+source /root/.gdb/std-gdb.gdbinit
+define pvector
+document pvector
+define plist
+document plist
+define plist_member
+document plist_member
+define pmap
+document pmap
+define pmap_member
+document pmap_member
+define pset
+document pset
+define pdequeue
+document pdequeue
+define pstack
+document pstack
+define pqueue
+document pqueue
+define ppqueue
+document ppqueue
+define pbitset
+document pbitset
+define pstring
+document pstring
+define pwstring
+document pwstring
+set print pretty on
+set print object on
+set print static-members on
+set print vtbl on
+set print demangle on
+set demangle-style gnu-v3
+set print sevenbit-strings off
+set follow-fork-mode child
+set detach-on-fork off
+python
+show pretty-printer
Undefined show command: "pretty-printer".  Try "help show".
+info pretty-printer
global pretty-printers:
  builtin
    mpx_bound128
  libstdc++-v6
    __gnu_cxx::_Slist_iterator
    __gnu_cxx::__8::_Slist_iterator
    __gnu_cxx::__8::__normal_iterator
    __gnu_cxx::__8::slist
    __gnu_cxx::__normal_iterator
    __gnu_cxx::slist
    __gnu_debug::_Safe_iterator
    std::_Deque_const_iterator
    std::_Deque_iterator
    std::_Fwd_list_const_iterator
    std::_Fwd_list_iterator
    std::_List_const_iterator
    std::_List_iterator
    std::_Node_handle
    std::_Rb_tree_const_iterator
    std::_Rb_tree_iterator
    std::__8::_Deque_const_iterator
    std::__8::_Deque_iterator
    std::__8::_Fwd_list_const_iterator
    std::__8::_Fwd_list_iterator
    std::__8::_List_const_iterator
    std::__8::_List_iterator
    std::__8::_Node_handle
    std::__8::_Rb_tree_const_iterator
    std::__8::_Rb_tree_iterator
    std::__8::__cxx11::__cxx1998::list
    std::__8::__cxx11::basic_string
    std::__8::__cxx11::list
    std::__8::__cxx1998::_Deque_const_iterator
    std::__8::__cxx1998::_Deque_iterator
    std::__8::__cxx1998::_Fwd_list_const_iterator
    std::__8::__cxx1998::_Fwd_list_iterator
    std::__8::__cxx1998::_List_const_iterator
    std::__8::__cxx1998::_List_iterator
    std::__8::__cxx1998::bitset
    std::__8::__cxx1998::deque
    std::__8::__cxx1998::forward_list
    std::__8::__cxx1998::list
    std::__8::__cxx1998::map
    std::__8::__cxx1998::multimap
    std::__8::__cxx1998::multiset
    std::__8::__cxx1998::set
    std::__8::__cxx1998::unordered_map
    std::__8::__cxx1998::unordered_multimap
    std::__8::__cxx1998::unordered_multiset
    std::__8::__cxx1998::unordered_set
    std::__8::__cxx1998::vector
    std::__8::any
    std::__8::basic_string
    std::__8::basic_string_view
    std::__8::bitset
    std::__8::deque
    std::__8::experimental::filesystem::v1::__cxx11::path
    std::__8::experimental::filesystem::v1::path
    std::__8::experimental::fundamentals_v1::any
    std::__8::experimental::fundamentals_v1::basic_string_view
    std::__8::experimental::fundamentals_v1::optional
    std::__8::filesystem::__cxx11::path
    std::__8::filesystem::path
    std::__8::forward_list
    std::__8::list
    std::__8::map
    std::__8::multimap
    std::__8::multiset
    std::__8::optional
    std::__8::pair
    std::__8::priority_queue
    std::__8::queue
    std::__8::set
    std::__8::shared_ptr
    std::__8::stack
    std::__8::tr1::shared_ptr
    std::__8::tr1::unordered_map
    std::__8::tr1::unordered_multimap
    std::__8::tr1::unordered_multiset
    std::__8::tr1::unordered_set
    std::__8::tr1::weak_ptr
    std::__8::tuple
    std::__8::unique_ptr
    std::__8::unordered_map
    std::__8::unordered_multimap
    std::__8::unordered_multiset
    std::__8::unordered_set
    std::__8::variant
    std::__8::vector
    std::__8::weak_ptr
    std::__cxx11::__cxx1998::list
    std::__cxx11::basic_string
    std::__cxx11::list
    std::__cxx1998::_Deque_const_iterator
    std::__cxx1998::_Deque_iterator
    std::__cxx1998::_Fwd_list_const_iterator
    std::__cxx1998::_Fwd_list_iterator
    std::__cxx1998::_List_const_iterator
    std::__cxx1998::_List_iterator
    std::__cxx1998::bitset
    std::__cxx1998::deque
    std::__cxx1998::forward_list
    std::__cxx1998::list
    std::__cxx1998::map
    std::__cxx1998::multimap
    std::__cxx1998::multiset
    std::__cxx1998::set
    std::__cxx1998::unordered_map
    std::__cxx1998::unordered_multimap
    std::__cxx1998::unordered_multiset
    std::__cxx1998::unordered_set
    std::__cxx1998::vector
    std::__debug::bitset
    std::__debug::deque
    std::__debug::forward_list
    std::__debug::list
    std::__debug::map
    std::__debug::multimap
    std::__debug::multiset
    std::__debug::priority_queue
    std::__debug::queue
    std::__debug::set
    std::__debug::stack
    std::__debug::unique_ptr
    std::__debug::unordered_map
    std::__debug::unordered_multimap
    std::__debug::unordered_multiset
    std::__debug::unordered_set
    std::__debug::vector
    std::any
    std::basic_string
    std::basic_string_view
    std::bitset
    std::deque
    std::experimental::filesystem::v1::__cxx11::path
    std::experimental::filesystem::v1::path
    std::experimental::fundamentals_v1::any
    std::experimental::fundamentals_v1::basic_string_view
    std::experimental::fundamentals_v1::optional
    std::filesystem::__cxx11::path
    std::filesystem::path
    std::forward_list
    std::list
    std::map
    std::multimap
    std::multiset
    std::optional
    std::pair
    std::priority_queue
    std::queue
    std::set
    std::shared_ptr
    std::stack
    std::tr1::shared_ptr
    std::tr1::unordered_map
    std::tr1::unordered_multimap
    std::tr1::unordered_multiset
    std::tr1::unordered_set
    std::tr1::weak_ptr
    std::tuple
    std::unique_ptr
    std::unordered_map
    std::unordered_multimap
    std::unordered_multiset
    std::unordered_set
    std::variant
    std::vector
    std::weak_ptr
  mysqld
    AccessPath
    Bounds_checked_array
    Func_ptr
    List
    Mem_root_array
    Prealloced_array
    mem_root_deque
    mysql_mutex_t
+q
+set auto-load safe-path /root/.gdb
+set index-cache on
Warning: 'set index-cache on', an alias for the command 'set index-cache enabled', is deprecated.
Use 'set index-cache enabled on'.

+set print pretty
+set follow-fork-mode child
+set print elements 0
+handle SIGPIPE nostop
+handle SIGUSR1 nostop
+handle SIGILL pass nostop noprint
+source /root/.gdb/sqlengine-gdb.py
+source /root/.gdb/std-gdb.gdbinit
+define pvector
+document pvector
+define plist
+document plist
+define plist_member
+document plist_member
+define pmap
+document pmap
+define pmap_member
+document pmap_member
+define pset
+document pset
+define pdequeue
+document pdequeue
+define pstack
+document pstack
+define pqueue
+document pqueue
+define ppqueue
+document ppqueue
+define pbitset
+document pbitset
+define pstring
+document pstring
+define pwstring
+document pwstring
+set print pretty on
+set print object on
+set print static-members on
+set print vtbl on
+set print demangle on
+set demangle-style gnu-v3
+set print sevenbit-strings off
+set follow-fork-mode child
+set detach-on-fork off
+python
Reading symbols from /data/workspace/TDProxyEngine/tdsql/bld/bin/sqlengine...
[New LWP 295722]
[New LWP 295747]
[New LWP 295720]
[New LWP 295726]
[New LWP 295725]
[New LWP 295724]
[New LWP 295728]
[New LWP 295730]
[New LWP 295727]
[New LWP 295729]
[New LWP 295733]
[New LWP 295732]
[New LWP 295746]
[New LWP 295734]
[New LWP 295735]
[New LWP 295721]
[New LWP 295731]
[New LWP 295745]
[New LWP 295776]
[New LWP 295749]
[New LWP 295778]
[New LWP 295748]
[New LWP 295777]

This GDB supports auto-downloading debuginfo from the following URLs:
  <https://debuginfod.centos.org/>
Debuginfod has been enabled.
To make this setting permanent, add 'set debuginfod enabled on' to .gdbinit.
Downloading separate debug info for system-supplied DSO at 0x7ffd85cf1000
[###                                                                                            ][ ###                                                                                           ][  ###                                                                                          ]                                                                                                   [Thread debugging using libthread_db enabled]
Using host libthread_db library "/lib64/libthread_db.so.1".
Core was generated by `/data/workspace/TDProxyEngine/tdsql/bld/bin/sqlengine --no-defaults --initializ'.
Program terminated with signal SIGABRT, Aborted.
#0  __pthread_kill (threadid=<optimized out>, signo=6) at ../sysdeps/unix/sysv/linux/pthread_kill.c:56
[Current thread is 1 (Thread 0x7fcf2311e700 (LWP 295722))]
warning: File "/usr/share/gdb/auto-load/usr/lib64/libstdc++.so.6.0.25-gdb.py" auto-loading has been declined by your `auto-load safe-path' set to "/root/.gdb".
To enable execution of this file add
	add-auto-load-safe-path /usr/share/gdb/auto-load/usr/lib64/libstdc++.so.6.0.25-gdb.py
line to your configuration file "/root/.gdbinit".
To completely disable this security protection add
	set auto-load safe-path /
line to your configuration file "/root/.gdbinit".
For more information about this security protection see the
"Auto-loading safe path" section in the GDB manual.  E.g., run from the shell:
	info "(gdb)Auto-loading safe path"
warning: Source file is more recent than executable.
+bt
#0  __pthread_kill (threadid=<optimized out>, signo=6) at ../sysdeps/unix/sysv/linux/pthread_kill.c:56
#1  0x0000000008eabf73 in my_write_core (sig=6) at /data/workspace/TDProxyEngine/mysys/stacktrace.cc:409
#2  0x0000000005d39858 in handle_fatal_signal (sig=6) at /data/workspace/TDProxyEngine/sql/signal_handler.cc:194
#3  <signal handler called>
#4  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#5  0x00007fcf23941e65 in __GI_abort () at abort.c:79
#6  0x00007fcf23941d39 in __assert_fail_base (fmt=0x7fcf23aba9c0 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=assertion@entry=0xaf3cb48 "false", file=file@entry=0xb0275d0 "/data/workspace/TDProxyEngine/sql/sql_parse.cc", line=line@entry=4114, function=function@entry=0xb028238 "int mysql_execute_command(THD*, bool)") at assert.c:92
#7  0x00007fcf23966e86 in __GI___assert_fail (assertion=0xaf3cb48 "false", file=0xb0275d0 "/data/workspace/TDProxyEngine/sql/sql_parse.cc", line=4114, function=0xb028238 "int mysql_execute_command(THD*, bool)") at assert.c:101
#8  0x00000000057abe14 in mysql_execute_command (thd=0x1e25a000, first_level=false) at /data/workspace/TDProxyEngine/sql/sql_parse.cc:4114
#9  0x0000000005852327 in (anonymous namespace)::Execute_sql_statement::execute_server_code (this=0x7fcf2311d0f0, thd=0x1e25a000) at /data/workspace/TDProxyEngine/sql/sql_prepare.cc:2585
#10 0x00000000058580c9 in Prepared_statement::execute_server_runnable (this=0x7fcf2311ccc0, server_runnable=0x7fcf2311d0f0) at /data/workspace/TDProxyEngine/sql/sql_prepare.cc:3580
#11 0x000000000585b453 in Ed_connection::execute_direct (this=0x7fcf2311d150, server_runnable=0x7fcf2311d0f0) at /data/workspace/TDProxyEngine/sql/sql_prepare.cc:4198
#12 0x000000000585b202 in Ed_connection::execute_direct (this=0x7fcf2311d150, sql_text=...) at /data/workspace/TDProxyEngine/sql/sql_prepare.cc:4172
#13 0x0000000008990fc5 in dd::execute_query (thd=0x1e25a000, q_buf="CREATE TABLE dd_properties(\n  properties MEDIUMBLOB\n) ENGINE=INNODB DEFAULT CHARSET=utf8 COLLATE=utf8_bin ROW_FORMAT=DYNAMIC STATS_PERSISTENT=0 TABLESPACE=mysql") at /data/workspace/TDProxyEngine/sql/dd/impl/utils.cc:47
#14 0x00000000089bd527 in dd::initialize_dd_properties (thd=0x1e25a000) at /data/workspace/TDProxyEngine/sql/dd/impl/bootstrap/bootstrapper.cc:1209
#15 0x00000000089b7eb3 in dd::bootstrap::initialize_dictionary (thd=0x1e25a000, is_dd_upgrade_57=false, d=0x1d176008) at /data/workspace/TDProxyEngine/sql/dd/impl/bootstrap/bootstrapper.cc:852
#16 0x00000000089b8c25 in dd::bootstrap::initialize (thd=0x1e25a000) at /data/workspace/TDProxyEngine/sql/dd/impl/bootstrap/bootstrapper.cc:928
#17 0x00000000068c77ea in bootstrap::handle_bootstrap (arg=0x7ffd85c9d2f0) at /data/workspace/TDProxyEngine/sql/bootstrap.cc:328
#18 0x0000000009fbb0c4 in pfs_spawn_thread (arg=0x1d9078a0) at /data/workspace/TDProxyEngine/storage/perfschema/pfs.cc:2914
#19 0x00007fcf259ff1ca in start_thread (arg=<optimized out>) at pthread_create.c:479
#20 0x00007fcf239598d3 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95
+f 8
#8  0x00000000057abe14 in mysql_execute_command (thd=0x1e25a000, first_level=false) at /data/workspace/TDProxyEngine/sql/sql_parse.cc:4114
+where
#0  __pthread_kill (threadid=<optimized out>, signo=6) at ../sysdeps/unix/sysv/linux/pthread_kill.c:56
#1  0x0000000008eabf73 in my_write_core (sig=6) at /data/workspace/TDProxyEngine/mysys/stacktrace.cc:409
#2  0x0000000005d39858 in handle_fatal_signal (sig=6) at /data/workspace/TDProxyEngine/sql/signal_handler.cc:194
#3  <signal handler called>
#4  __GI_raise (sig=sig@entry=6) at ../sysdeps/unix/sysv/linux/raise.c:50
#5  0x00007fcf23941e65 in __GI_abort () at abort.c:79
#6  0x00007fcf23941d39 in __assert_fail_base (fmt=0x7fcf23aba9c0 "%s%s%s:%u: %s%sAssertion `%s' failed.\n%n", assertion=assertion@entry=0xaf3cb48 "false", file=file@entry=0xb0275d0 "/data/workspace/TDProxyEngine/sql/sql_parse.cc", line=line@entry=4114, function=function@entry=0xb028238 "int mysql_execute_command(THD*, bool)") at assert.c:92
#7  0x00007fcf23966e86 in __GI___assert_fail (assertion=0xaf3cb48 "false", file=0xb0275d0 "/data/workspace/TDProxyEngine/sql/sql_parse.cc", line=4114, function=0xb028238 "int mysql_execute_command(THD*, bool)") at assert.c:101
#8  0x00000000057abe14 in mysql_execute_command (thd=0x1e25a000, first_level=false) at /data/workspace/TDProxyEngine/sql/sql_parse.cc:4114
#9  0x0000000005852327 in (anonymous namespace)::Execute_sql_statement::execute_server_code (this=0x7fcf2311d0f0, thd=0x1e25a000) at /data/workspace/TDProxyEngine/sql/sql_prepare.cc:2585
#10 0x00000000058580c9 in Prepared_statement::execute_server_runnable (this=0x7fcf2311ccc0, server_runnable=0x7fcf2311d0f0) at /data/workspace/TDProxyEngine/sql/sql_prepare.cc:3580
#11 0x000000000585b453 in Ed_connection::execute_direct (this=0x7fcf2311d150, server_runnable=0x7fcf2311d0f0) at /data/workspace/TDProxyEngine/sql/sql_prepare.cc:4198
#12 0x000000000585b202 in Ed_connection::execute_direct (this=0x7fcf2311d150, sql_text=...) at /data/workspace/TDProxyEngine/sql/sql_prepare.cc:4172
#13 0x0000000008990fc5 in dd::execute_query (thd=0x1e25a000, q_buf="CREATE TABLE dd_properties(\n  properties MEDIUMBLOB\n) ENGINE=INNODB DEFAULT CHARSET=utf8 COLLATE=utf8_bin ROW_FORMAT=DYNAMIC STATS_PERSISTENT=0 TABLESPACE=mysql") at /data/workspace/TDProxyEngine/sql/dd/impl/utils.cc:47
#14 0x00000000089bd527 in dd::initialize_dd_properties (thd=0x1e25a000) at /data/workspace/TDProxyEngine/sql/dd/impl/bootstrap/bootstrapper.cc:1209
#15 0x00000000089b7eb3 in dd::bootstrap::initialize_dictionary (thd=0x1e25a000, is_dd_upgrade_57=false, d=0x1d176008) at /data/workspace/TDProxyEngine/sql/dd/impl/bootstrap/bootstrapper.cc:852
#16 0x00000000089b8c25 in dd::bootstrap::initialize (thd=0x1e25a000) at /data/workspace/TDProxyEngine/sql/dd/impl/bootstrap/bootstrapper.cc:928
#17 0x00000000068c77ea in bootstrap::handle_bootstrap (arg=0x7ffd85c9d2f0) at /data/workspace/TDProxyEngine/sql/bootstrap.cc:328
#18 0x0000000009fbb0c4 in pfs_spawn_thread (arg=0x1d9078a0) at /data/workspace/TDProxyEngine/storage/perfschema/pfs.cc:2914
#19 0x00007fcf259ff1ca in start_thread (arg=<optimized out>) at pthread_create.c:479
#20 0x00007fcf239598d3 in clone () at ../sysdeps/unix/sysv/linux/x86_64/clone.S:95
+f 8
#8  0x00000000057abe14 in mysql_execute_command (thd=0x1e25a000, first_level=false) at /data/workspace/TDProxyEngine/sql/sql_parse.cc:4114
+p *thd
$1 = (THD) {
  <MDL_context_owner> = {
    _vptr.MDL_context_owner = 0xe687508 <vtable for THD+16>
  }, 
  <Query_arena> = {
    _vptr.Query_arena = 0xe687578 <vtable for THD+128>,
    m_item_list = 0x0,
    mem_root = 0x7fcf2311cf68,
    is_repreparing = false,
    state = Query_arena::STMT_REGULAR_EXECUTION
  }, 
  <Open_tables_state> = {
    m_reprepare_observers = empty Prealloced_array<Reprepare_observer*, 4>,
    open_tables = 0x0,
    temporary_tables = 0x0,
    lock = 0x0,
    extra_lock = 0x0,
    locked_tables_mode = LTM_NONE,
    state_flags = 0
  }, 
  members of THD:
  mdl_context = {
    m_wait = {
      m_LOCK_wait_status = Python Exception <class 'gdb.error'>: There is no member named __data.
,
      m_COND_wait_status = {
        m_cond = {
          m = 0x0,
          seq = 0x1d928fc0
        },
        m_psi = 0x0
      },
      m_wait_status = MDL_wait::WS_EMPTY
    },
    m_ticket_store = {
      m_durations = {[0] = {
          m_ticket_list = {
            <I_P_List_null_counter> = {<No data fields>}, 
            <I_P_List_no_push_back<MDL_ticket>> = {<No data fields>}, 
            members of I_P_List<MDL_ticket, I_P_List_adapter<MDL_ticket, &MDL_ticket::next_in_context, &MDL_ticket::prev_in_context>, I_P_List_null_counter, I_P_List_no_push_back<MDL_ticket> >:
            m_first = 0x0
          },
          m_mat_front = 0x0
        }, [1] = {
          m_ticket_list = {
            <I_P_List_null_counter> = {<No data fields>}, 
            <I_P_List_no_push_back<MDL_ticket>> = {<No data fields>}, 
            members of I_P_List<MDL_ticket, I_P_List_adapter<MDL_ticket, &MDL_ticket::next_in_context, &MDL_ticket::prev_in_context>, I_P_List_null_counter, I_P_List_no_push_back<MDL_ticket> >:
            m_first = 0x0
          },
          m_mat_front = 0x0
        }, [2] = {
          m_ticket_list = {
            <I_P_List_null_counter> = {<No data fields>}, 
            <I_P_List_no_push_back<MDL_ticket>> = {<No data fields>}, 
            members of I_P_List<MDL_ticket, I_P_List_adapter<MDL_ticket, &MDL_ticket::next_in_context, &MDL_ticket::prev_in_context>, I_P_List_null_counter, I_P_List_no_push_back<MDL_ticket> >:
            m_first = 0x0
          },
          m_mat_front = 0x0
        }},
      THRESHOLD = 256,
      INITIAL_BUCKET_COUNT = 512,
      m_count = 0,
      m_map = Python Exception <class 'ValueError'>: Unsupported implementation for unique_ptr: std::__uniq_ptr_data<std::unordered_multimap<MDL_key const*, MDL_ticket_store::MDL_ticket_handle, MDL_ticket_store::Hash, MDL_ticket_store::Key_equal, std::allocator<std::pair<MDL_key const* const, MDL_ticket_store::MDL_ticket_handle> > >, std::default_delete<std::unordered_multimap<MDL_key const*, MDL_ticket_store::MDL_ticket_handle, MDL_ticket_store::Hash, MDL_ticket_store::Key_equal, std::allocator<std::pair<MDL_key const* const, MDL_ticket_store::MDL_ticket_handle> > > >, true, true>
{
        _M_t = {
          <std::__uniq_ptr_impl<std::unordered_multimap<MDL_key const*, MDL_ticket_store::MDL_ticket_handle, MDL_ticket_store::Hash, MDL_ticket_store::Key_equal, std::allocator<std::pair<MDL_key const* const, MDL_ticket_store::MDL_ticket_handle> > >, std::default_delete<std::unordered_multimap<MDL_key const*, MDL_ticket_store::MDL_ticket_handle, MDL_ticket_store::Hash, MDL_ticket_store::Key_equal, std::allocator<std::pair<MDL_key const* const, MDL_ticket_store::MDL_ticket_handle> > > > >> = {
            _M_t = std::tuple containing = {
              [1] = 0x0,
              [2] = {
                <std::default_delete<std::unordered_multimap<MDL_key const*, MDL_ticket_store::MDL_ticket_handle, MDL_ticket_store::Hash, MDL_ticket_store::Key_equal, std::allocator<std::pair<MDL_key const* const, MDL_ticket_store::MDL_ticket_handle> > > >> = {<No data fields>}, <No data fields>}
            }
          }, <No data fields>}
      }
    },
    m_owner = 0x1e25a000,
    m_group_leader = 0x0,
    m_needs_thr_lock_abort = false,
    m_force_dml_deadlock_weight = false,
    m_LOCK_waiting_for = {
      m_prlock = {
        lock = {
          butex = 0x1d929340,
          csite = {
            duration_ns = 0,
            sampling_range = 0
          }
        },
        no_active_readers = {
          m = 0x0,
          seq = 0x1d929380
        },
        active_readers = 0,
        writers_waiting_readers = 0,
        active_writer = false,
        writer_thread = 0
      },
      m_psi = 0x0
    },
    m_waiting_for = 0x0,
    m_pins = 0x2257e080,
    m_rand_state = 4294967295
  },
  mark_used_columns = MARK_COLUMNS_READ,
  want_privilege = 0,
  main_lex = Python Exception <class 'ValueError'>: Unsupported implementation for unique_ptr: std::__uniq_ptr_data<LEX, std::default_delete<LEX>, true, true>
{
    _M_t = {
      <std::__uniq_ptr_impl<LEX, std::default_delete<LEX> >> = {
        _M_t = std::tuple containing = {
          [1] = 0x1d8b6400,
          [2] = {
            <std::default_delete<LEX>> = {<No data fields>}, <No data fields>}
        }
      }, <No data fields>}
  },
  lex = 0x1f4dc028,
  ora_type_pos_list = empty std::__cxx11::list,
  m_dd_client = Python Exception <class 'ValueError'>: Unsupported implementation for unique_ptr: std::__uniq_ptr_data<dd::cache::Dictionary_client, std::default_delete<dd::cache::Dictionary_client>, true, true>
{
    _M_t = {
      <std::__uniq_ptr_impl<dd::cache::Dictionary_client, std::default_delete<dd::cache::Dictionary_client> >> = {
        _M_t = std::tuple containing = {
          [1] = 0x1d8fec00,
          [2] = {
            <std::default_delete<dd::cache::Dictionary_client>> = {<No data fields>}, <No data fields>}
        }
      }, <No data fields>}
  },
  m_query_string = {
    str = 0x1f4dcbb8 "CREATE TABLE dd_properties(\n  properties MEDIUMBLOB\n) ENGINE=INNODB DEFAULT CHARSET=utf8 COLLATE=utf8_bin ROW_FORMAT=DYNAMIC STATS_PERSISTENT=0 TABLESPACE=mysql",
    length = 160
  },
  m_normalized_query = {
    m_ptr = 0x0,
    m_length = 0,
    m_charset = 0x157bc6a0 <my_charset_bin>,
    m_alloced_length = 0,
    m_is_alloced = false
  },
  m_safe_to_display = {
    _M_base = {
      static _S_alignment = 1,
      _M_i = true
    },
    static is_always_lock_free = true
  },
  m_catalog = {
    str = 0xaf4e370 "std",
    length = 3
  },
  m_db = {
    str = 0x224acb00 "mysql",
    length = 5
  },
  m_resource_group_ctx = {
    m_cur_resource_group = 0x0,
    m_switch_resource_group_str = "\000\000\000\000\000\000\000\000innodb-log-checkpoint-every\000\000\000\000\000plugin-innodb-log-checkpo",
    m_warn = 0
  },
  m_rewritten_query = {
    m_ptr = 0x0,
    m_length = 0,
    m_charset = 0x157bc6a0 <my_charset_bin>,
    m_alloced_length = 0,
    m_is_alloced = false
  },
  m_group_leader = 0x0,
  rli_fake = 0x0,
  rli_slave = 0x0,
  tx_commit_pending = false,
  m_select_lock_n_sec = 0,
  static DEFAULT_WHERE = 0xaf55cbb "field list",
  m_net_server_extension = {
    m_before_header = 0x0,
    m_after_header = 0x0,
    m_user_data = 0x0,
    compression = {
      compress_algorithm = '\000' <repeats 31 times>,
      compress_level = 0,
      compression_optional = false
    },
    compress_ctx = {
      algorithm = 0,
      u = {
        zlib_ctx = {
          compression_level = 0
        },
        zstd_ctx = {
          cctx = 0x0,
          dctx = 0x0,
          compression_level = 0
        }
      }
    },
    max_interval_packet = 0,
    net_buffer_shrink_time = 0
  },
  scheduler = 0x0,
  user_vars = {
    <std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::unique_ptr<user_var_entry, void (*)(user_var_entry*)>, Collation_hasher, Collation_key_equal, Malloc_allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<user_var_entry, void (*)(user_var_entry*)> > > >> = std::unordered_map with 0 elements, <No data fields>},
  rand = {
    seed1 = 623515669,
    seed2 = 117732486,
    max_value = 1073741823,
    max_value_dbl = 1073741823
  },
  slog_rand = {
    seed1 = 623515701,
    seed2 = 117732486,
    max_value = 1073741823,
    max_value_dbl = 1073741823
  },
  variables = {
    dynamic_variables_version = 0,
    dynamic_variables_ptr = 0x0,
    dynamic_variables_head = 320,
    dynamic_variables_size = 0,
    dynamic_variables_allocs = 0x0,
    max_heap_table_size = 16777216,
    tmp_table_size = 16777216,
    long_query_time = 10000000,
    end_markers_in_json = false,
    windowing_use_high_precision = true,
    optimizer_switch = 45613055,
    optimizer_trace = 0,
    optimizer_trace_features = 15,
    optimizer_trace_offset = -1,
    optimizer_trace_limit = 1,
    optimizer_trace_max_mem_size = 1048576,
    sql_mode = 1168113696,
    option_bits = 2148272640,
    select_limit = 18446744073709551615,
    max_join_size = 18446744073709551615,
    auto_increment_increment = 1,
    auto_increment_offset = 1,
    bulk_insert_buff_size = 8388608,
    eq_range_index_dive_limit = 200,
    cte_max_recursion_depth = 1000,
    histogram_generation_max_mem_size = 20000000,
    join_buff_size = 262144,
    lock_wait_timeout = 31536000,
    max_allowed_packet = 67108864,
    max_error_count = 1024,
    max_length_for_sort_data = 4096,
    max_points_in_geometry = 65536,
    max_sort_length = 1024,
    max_insert_delayed_threads = 20,
    min_examined_row_limit = 0,
    net_buffer_length = 16384,
    net_interactive_timeout = 28800,
    net_read_timeout = 30,
    net_retry_count = 10,
    net_wait_timeout = 28800,
    net_write_timeout = 60,
    optimizer_prune_level = 1,
    optimizer_search_depth = 62,
    parser_max_mem_size = 18446744073709551615,
    range_optimizer_max_mem_size = 8388608,
    preload_buff_size = 32768,
    profiling_history_size = 15,
    read_buff_size = 131072,
    read_rnd_buff_size = 262144,
    div_precincrement = 4,
    sortbuff_size = 262144,
    max_sp_recursion_depth = 0,
    default_week_format = 0,
    max_seeks_for_key = 18446744073709551615,
    range_alloc_block_size = 4096,
    query_alloc_block_size = 8192,
    query_prealloc_size = 8192,
    trans_alloc_block_size = 8192,
    trans_prealloc_size = 4096,
    group_concat_max_len = 1024,
    binlog_format = 2,
    rbr_exec_mode_options = 0,
    binlog_direct_non_trans_update = false,
    binlog_row_image = 2,
    binlog_trx_compression = false,
    binlog_trx_compression_type = 0,
    binlog_trx_compression_level_zstd = 3,
    binlog_row_value_options = 0,
    sql_log_bin = true,
    transaction_write_set_extraction = 2,
    completion_type = 0,
    transaction_isolation = 2,
    updatable_views_with_limit = 1,
    max_user_connections = 0,
    my_aes_mode = 0,
    ssl_fips_mode = 0,
    resultset_metadata = 1,
    pseudo_thread_id = 1,
    transaction_read_only = false,
    low_priority_updates = false,
    new_mode = false,
    keep_files_on_create = false,
    old_alter_table = false,
    big_tables = false,
    table_plugin = 0x1e2457f0,
    temp_table_plugin = 0x1e245820,
    character_set_filesystem = 0x157bc6a0 <my_charset_bin>,
    character_set_client = 0x159136a0 <my_charset_utf8mb4_0900_ai_ci>,
    character_set_results = 0x159136a0 <my_charset_utf8mb4_0900_ai_ci>,
    collation_server = 0x159136a0 <my_charset_utf8mb4_0900_ai_ci>,
    collation_database = 0x159136a0 <my_charset_utf8mb4_0900_ai_ci>,
    collation_connection = 0x159136a0 <my_charset_utf8mb4_0900_ai_ci>,
    lc_messages = 0x1630d260 <my_locale_en_US>,
    lc_time_names = 0x1630d260 <my_locale_en_US>,
    time_zone = 0xf9c6da8 <tz_SYSTEM>,
    explicit_defaults_for_timestamp = true,
    sysdate_is_now = false,
    binlog_rows_query_log_events = false,
    binlog_ddl_skip_rewrite = false,
    query_exec_time = 0,
    query_exec_time_double = 0,
    log_slow_rate_limit = 1,
    log_slow_filter = 0,
    log_slow_verbosity = 0,
    log_query_errors = {
      static MAX_CODES_NUM = 64 '@',
      static MAX_TEXT_LENGTH = 640,
      static LOG_ALL = {
        m_ptr = 0xbf25054 "ALL",
        m_length = 3,
        m_charset = 0x0,
        m_alloced_length = 0,
        m_is_alloced = false
      },
      is_all_set = false,
      codes = {[0] = 0 <repeats 64 times>}
    },
    innodb_io_reads = 0,
    innodb_io_read = 0,
    innodb_io_reads_wait_timer = 0,
    innodb_lock_que_wait_timer = 0,
    innodb_innodb_que_wait_timer = 0,
    innodb_page_access = 0,
    long_query_time_double = 10,
    pseudo_replica_mode = false,
    gtid_next = {
      type = AUTOMATIC_GTID,
      gtid = {
        sidno = 0,
        gno = 0,
        static MAX_TEXT_LENGTH = 56
      },
      static MAX_TEXT_LENGTH = 56
    },
    gtid_next_list = {
      gtid_set = 0x0,
      is_non_null = false
    },
    session_track_gtids = 0,
    max_execution_time = 0,
    track_sysvars_ptr = 0x1d9eec20 "time_zone,autocommit,character_set_client,character_set_results,character_set_connection",
    session_track_schema = true,
    session_track_state_change = false,
    expand_fast_index_creation = false,
    threadpool_high_prio_tickets = 4294967295,
    threadpool_high_prio_mode = 0,
    session_track_transaction_info = 0,
    information_schema_stats_expiry = 86400,
    show_create_table_verbosity = false,
    show_old_temporals = false,
    ft_query_extra_word_chars = false,
    original_commit_timestamp = 36028797018963968,
    internal_tmp_mem_storage_engine = 1,
    default_collation_for_utf8mb4 = 0x159136a0 <my_charset_utf8mb4_0900_ai_ci>,
    use_secondary_engine = 1,
    secondary_engine_cost_threshold = 100000,
    group_replication_consistency = 0,
    sql_require_primary_key = false,
    sql_generate_invisible_primary_key = true,
    show_gipk_in_create_table_and_information_schema = true,
    original_server_version = 999999,
    immediate_server_version = 999999,
    print_identified_with_as_hex = false,
    default_table_encryption = 0,
    show_create_table_skip_secondary_engine = false,
    generated_random_password_length = 20,
    require_row_format = false,
    select_into_buffer_size = 131072,
    select_into_disk_sync = false,
    select_into_disk_sync_delay = 0,
    terminology_use_previous = 0,
    opt_tdsql_ignore_single_select_index = true,
    opt_tdsql_ignore_single_update_index = true,
    opt_tdsql_legacy_hint = true,
    opt_tdsql_legacy_hint_display_router = false,
    opt_tdsql_fqs = true,
    opt_tdsql_fqs_switch = 2046,
    opt_tran_engine_to_tdsql = true,
    opt_tdsql_ddl_create_table_as_switch = false,
    opt_tdsql_ddl_exec_set_vars = 0x1e245850 "",
    opt_tdsql_ddl_trigger_osc_config = 0x1e245790 "",
    opt_tdsql_ddl_log_osc_config = 0x1e245760 "",
    opt_tdsql_ddl_lock_osc_config = 0x1e245730 "",
    opt_tdsql_binlog_dump_sticky_backend = 0x1e245700 "",
    opt_tdsql_ddl_legacy_compatibility = 1,
    opt_tdsql_ddl_enable_noop_features = false,
    opt_tdsql_ddl_auto_distribution_mode = false,
    opt_tdsql_ddl_enable_task_framework = false,
    opt_tdsql_ddl_acquire_resource_lock_serially = true,
    opt_tdsql_ddl_forbid_float_as_unique_key = true,
    opt_tdsql_alter_table_check_switch = 31,
    opt_tdsql_ddl_switch = 3,
    opt_partition_selection_multi_sets = false,
    opt_tdsql_partition_selection = false,
    opt_tdsql_subst_prepared_statement_params = false,
    opt_tdsql_ddl_nonblock_switch = true,
    opt_tdsql_ddl_nonblock_retry_times = 12,
    opt_tdsql_ddl_nonblock_retry_interval_s = 5,
    opt_tdsql_ddl_nonblock_lock_wait_timeout_s = 1,
    opt_tdsql_local_lock = false,
    opt_tdsql_dml_bulk_size = 5242880,
    opt_tdsql_bulk_dml = true,
    opt_tdsql_insert_ignore_abort_on_invalid_partition = false,
    opt_tdsql_prepared_statement_fast_path = false,
    opt_tdsql_enable_parallel_connection = false,
    tdsql_range_estimation_by_histogram = false,
    opt_tdsql_forbid_json_opaque_value = true,
    tdsql_show_virtual_index = false,
    tdsql_virtual_index_rec_per_key = 10,
    tdsql_allow_unique_index_histogram = false,
    tdsql_enable_replicate_table_write = false,
    show_dummy_shardkey_in_create_table = true,
    tdsql_allow_access_internal_table = false,
    tdsql_enable_parallel_query = true,
    parallel_query_switch = 189,
    opt_tdsql_compat_oracle_mode = false,
    tdsql_oracle_upper_case_name = false,
    tdsql_oracle_aggr_func_return_decimal = false,
    tdsql_ddl_name_restrict = false,
    opt_tdsql_disable_const_tables_for_pq = false,
    tdsql_query_offload_libra_mode = 0,
    tdsql_secondary_engine_offload_failed_warning = false,
    tdsql_secondary_execute_failed_failback_primary_engine = false,
    tdsql_secondary_engine_support_multi_stmt_transaction_mode = false,
    statement_outline_enable_apply = true,
    statement_outline_apply_verbose = false,
    opt_tdsql_sequence_usage_check = true,
    tdsql_rw_split = 1,
    tdsql_rw_latency_threshold = 10,
    tdsql_rw_slave_keep_time = 0,
    tdsql_close_unused_slave_connection = true,
    tdsql_parse_double_quote_as_back_quote = true,
    tdsql_enable_direct_semi_anti_join = false,
    tdsql_check_deparser_mode = false,
    tdsql_opt_prefer_firstmatch_sj = true,
    tdsql_subquery_cache_enabled = false,
    tdsql_subquery_cache_cost_threshold = 4000,
    tdsql_subquery_cache_check_frequency = 200,
    opt_tdsql_enable_user_hint_pushdown = true,
    opt_tdsql_send_found_rows = false,
    opt_tdsql_connection_id = 4294967296
  },
  status_var = {
    created_tmp_disk_tables = 0,
    created_tmp_tables = 0,
    ha_commit_count = 0,
    ha_delete_count = 0,
    ha_read_first_count = 0,
    ha_read_last_count = 0,
    ha_read_key_count = 0,
    ha_read_next_count = 0,
    ha_read_prev_count = 0,
    ha_read_rnd_count = 0,
    ha_read_rnd_next_count = 0,
    ha_multi_range_read_init_count = 0,
    ha_rollback_count = 0,
    ha_update_count = 0,
    ha_write_count = 0,
    ha_prepare_count = 0,
    ha_discover_count = 0,
    ha_savepoint_count = 0,
    ha_savepoint_rollback_count = 0,
    ha_external_lock_count = 0,
    opened_tables = 0,
    opened_shares = 0,
    table_open_cache_hits = 0,
    table_open_cache_misses = 0,
    table_open_cache_overflows = 0,
    select_full_join_count = 0,
    select_full_range_join_count = 0,
    select_range_count = 0,
    select_range_check_count = 0,
    select_scan_count = 0,
    long_query_count = 0,
    filesort_merge_passes = 0,
    filesort_range_count = 0,
    filesort_rows = 0,
    filesort_scan_count = 0,
    com_stmt_prepare = 0,
    com_stmt_reprepare = 0,
    com_stmt_execute = 0,
    com_stmt_send_long_data = 0,
    com_stmt_fetch = 0,
    com_stmt_reset = 0,
    com_stmt_close = 0,
    bytes_received = 0,
    bytes_sent = 0,
    net_buffer_length = 0,
    max_execution_time_exceeded = 0,
    max_execution_time_set = 0,
    max_execution_time_set_failed = 0,
    questions = 0,
    pq_workers_created = 0,
    pq_rows_exchanged = 0,
    pq_fetch_rows = 0,
    pq_read_would_blocks = 0,
    remote_queries_executed = 0,
    tdsql_hint_count = 0,
    fqs_query_count = 0,
    fqs_rows_exchanged = 0,
    fqs_read_would_blocks = 0,
    fqs_rows_read_counts = 0,
    fqs_prepared_statement_fast_path_count = 0,
    proxy_hint_query_count = 0,
    digest_truncated_count = 0,
    success_queries = 0,
    error_queries = 0,
    transaction = 0,
    trx_access_zero_dn = 0,
    trx_access_one_dn = 0,
    trx_access_one_dn_read = 0,
    trx_access_one_dn_write = 0,
    trx_access_one_dn_write_commit = 0,
    trx_access_one_dn_write_rollback = 0,
    trx_access_multi_dn = 0,
    trx_access_multi_dn_read = 0,
    trx_access_multi_dn_write = 0,
    trx_access_multi_dn_write_2pc = 0,
    trx_access_multi_dn_write_2pc_success = 0,
    trx_access_multi_dn_write_2pc_error = 0,
    trx_access_multi_dn_write_2pc_unknown = 0,
    trx_access_multi_dn_write_one_phase_commit = 0,
    trx_access_multi_dn_write_rollback = 0,
    secondary_engine_execution_count = 0,
    com_other = 0,
    com_stat = {[0] = 0, [1] = 1, [2] = 0 <repeats 33 times>, [35] = 1, [36] = 1, [37] = 0 <repeats 153 times>},
    last_query_cost = 0,
    last_query_partial_plans = 0,
    fragmentation_stats = {
      scan_pages_contiguous = 0,
      scan_pages_disjointed = 0,
      scan_pages_total_seek_distance = 0,
      scan_data_size = 0,
      scan_deleted_recs_size = 0
    }
  },
  initial_status_var = 0x0,
  status_var_aggregated = false,
  m_connection_attributes = std::vector of length 0, capacity 0,
  m_current_query_cost = 0,
  m_current_query_partial_plans = 0,
  lock_info = {
    thread_id = 1,
    suspend = 0x1e25ba90
  },
  LOCK_thd_data = Python Exception <class 'gdb.error'>: There is no member named __data.
,
  LOCK_thd_query = Python Exception <class 'gdb.error'>: There is no member named __data.
,
  LOCK_temporary_tables = Python Exception <class 'gdb.error'>: There is no member named __data.
,
  LOCK_thd_sysvar = Python Exception <class 'gdb.error'>: There is no member named __data.
,
  LOCK_thd_protocol = Python Exception <class 'gdb.error'>: There is no member named __data.
,
  LOCK_thd_security_ctx = Python Exception <class 'gdb.error'>: There is no member named __data.
,
  LOCK_query_plan = Python Exception <class 'gdb.error'>: There is no member named __data.
,
  stmt_map = {
    st_hash = {
      <std::unordered_map<unsigned long, std::unique_ptr<Prepared_statement, std::default_delete<Prepared_statement> >, std::hash<unsigned long>, std::equal_to<unsigned long>, Malloc_allocator<std::pair<unsigned long const, std::unique_ptr<Prepared_statement, std::default_delete<Prepared_statement> > > > >> = std::unordered_map with 0 elements, <No data fields>},
    names_hash = {
      <std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, Prepared_statement*, Collation_hasher, Collation_key_equal, Malloc_allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, Prepared_statement*> > >> = std::unordered_map with 0 elements, <No data fields>},
    m_last_found_statement = 0x0
  },
  thread_stack = 0x7fcf2311da30 "",
  m_main_security_ctx = {
    m_user = {
      m_ptr = 0x0,
      m_length = 0,
      m_charset = 0x1593c340 <my_charset_utf8_general_ci>,
      m_alloced_length = 0,
      m_is_alloced = false
    },
    m_host = {
      m_ptr = 0xb74a3b0 "",
      m_length = 0,
      m_charset = 0x1593c340 <my_charset_utf8_general_ci>,
      m_alloced_length = 0,
      m_is_alloced = false
    },
    m_ip = {
      m_ptr = 0xb74a3b0 "",
      m_length = 0,
      m_charset = 0x1593c340 <my_charset_utf8_general_ci>,
      m_alloced_length = 0,
      m_is_alloced = false
    },
    m_host_or_ip = {
      m_ptr = 0xb74a3b0 "",
      m_length = 0,
      m_charset = 0x1593c340 <my_charset_utf8_general_ci>,
      m_alloced_length = 0,
      m_is_alloced = false
    },
    m_external_user = {
      m_ptr = 0xb74a3b0 "",
      m_length = 0,
      m_charset = 0x1593c340 <my_charset_utf8_general_ci>,
      m_alloced_length = 0,
      m_is_alloced = false
    },
    m_td_hash_stage1 = '\000' <repeats 20 times>,
    m_td_hash_stage1_len = 0,
    m_priv_user = "skip-grants user", '\000' <repeats 79 times>,
    m_priv_user_length = 16,
    m_proxy_user = '\000' <repeats 356 times>,
    m_proxy_user_length = 0,
    m_priv_host = "skip-grants host\000nnodb-max-dirty-pages-pct-lwm\000\000plugin-innodb-max-dirty-pages-pct-lwm", '\000' <repeats 170 times>,
    m_priv_host_length = 16,
    m_master_access = 18446744071562067967,
    m_db_access = 233257023,
    m_password_expired = false,
    m_active_roles = std::vector of length 0, capacity 0,
    m_acl_map = 0x0,
    m_map_checkout_count = 0,
    m_is_locked = false,
    m_is_skip_grants_user = true,
    m_executed_drop_policy = false,
    m_has_drop_policy = false,
    m_drop_policy = Python Exception <class 'ValueError'>: Unsupported implementation for unique_ptr: std::__uniq_ptr_data<std::function<void(Security_context*)>, std::default_delete<std::function<void(Security_context*)> >, true, true>
{
      _M_t = {
        <std::__uniq_ptr_impl<std::function<void(Security_context*)>, std::default_delete<std::function<void(Security_context*)> > >> = {
          _M_t = std::tuple containing = {
            [1] = 0x0,
            [2] = {
              <std::default_delete<std::function<void(Security_context*)> >> = {<No data fields>}, <No data fields>}
          }
        }, <No data fields>}
    },
    m_restrictions = {
      m_db_restrictions = {
        <Abstract_restrictions> = {
          _vptr.Abstract_restrictions = 0xe580ce8 <vtable for DB_restrictions+16>
        }, 
        members of DB_restrictions:
        m_restrictions = std::unordered_map with 0 elements
      }
    },
    m_ro_attribute = {
      read_only = tdsql::meta_data::NORMAL_READ_WRITE,
      delay_thresh = 0,
      watch = false,
      same_idc = tdsql::meta_data::ALL_SLAVE_IDC_EQUAL,
      slave_const = false,
      master_split = false,
      slave_split = false
    },
    m_expire_attribute = 0,
    m_thd = 0x1e25a000
  },
  m_security_ctx = 0x1e25b498,
  m_ipfromproxy = '\000' <repeats 45 times>,
  m_view_ctx_list = empty List<Security_context>,
  m_disable_password_validation = false,
  protocol_text = Python Exception <class 'ValueError'>: Unsupported implementation for unique_ptr: std::__uniq_ptr_data<Protocol_text, std::default_delete<Protocol_text>, true, true>
{
    _M_t = {
      <std::__uniq_ptr_impl<Protocol_text, std::default_delete<Protocol_text> >> = {
        _M_t = std::tuple containing = {
          [1] = 0x1d913b00,
          [2] = {
            <std::default_delete<Protocol_text>> = {<No data fields>}, <No data fields>}
        }
      }, <No data fields>}
  },
  protocol_binary = Python Exception <class 'ValueError'>: Unsupported implementation for unique_ptr: std::__uniq_ptr_data<Protocol_binary, std::default_delete<Protocol_binary>, true, true>
{
    _M_t = {
      <std::__uniq_ptr_impl<Protocol_binary, std::default_delete<Protocol_binary> >> = {
        _M_t = std::tuple containing = {
          [1] = 0x1d913b90,
          [2] = {
            <std::default_delete<Protocol_binary>> = {<No data fields>}, <No data fields>}
        }
      }, <No data fields>}
  },
  m_protocol = 0x7fcf2311cfe0,
  m_SSL = 0x0,
  query_plan = {
    thd = 0x1e25a000,
    sql_command = SQLCOM_CREATE_TABLE,
    lex = 0x1f4dc028,
    modification_plan = 0x0,
    is_ps = false
  },
  m_current_stage_key = 0,
  m_proc_info = 0xaf5386d "waiting for handler commit",
  where = 0xaf55cbb "field list",
  max_client_packet_length = 1836543021,
  handler_tables_hash = {
    <std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, std::unique_ptr<TABLE_LIST, My_free_deleter>, Collation_hasher, Collation_key_equal, Malloc_allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, std::unique_ptr<TABLE_LIST, My_free_deleter> > > >> = std::unordered_map with 0 elements, <No data fields>},
  ull_hash = {
    <std::unordered_map<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> >, User_level_lock*, std::hash<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, std::equal_to<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > >, Malloc_allocator<std::pair<std::__cxx11::basic_string<char, std::char_traits<char>, std::allocator<char> > const, User_level_lock*> > >> = std::unordered_map with 0 elements, <No data fields>},
  dbug_sentry = 4276998655,
  is_killable = true,
  LOCK_current_cond = Python Exception <class 'gdb.error'>: There is no member named __data.
,
  current_mutex = {
    _M_b = {
      _M_p = 0x0
    },
    static is_always_lock_free = <optimized out>
  },
  current_cond = {
    _M_b = {
      _M_p = 0x0
    },
    static is_always_lock_free = <optimized out>
  },
  COND_thr_lock = {
    m_cond = {
      m = 0x0,
      seq = 0x1d929240
    },
    m_psi = 0x0
  },
  m_command = COM_CONNECT,
  m_is_admin_conn = false,
  seq_dbs = std::map with 0 elements,
  ending_internal_txn = false,
  unmasked_server_id = 1,
  server_id = 1,
 